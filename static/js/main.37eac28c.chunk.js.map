{"version":3,"sources":["app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/quality.service.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/getRandomInt.js","app/utils/history.js","app/utils/generateAuthError.js","app/store/users.js","app/components/page/editUserPage/editUserPage.jsx","app/components/page/editUserPage/index.js","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/components/ui/footer.jsx","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logout.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","defaultValue","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","idToken","expiresIn","localId","expireDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserLocalId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","params","key","process","authService","register","a","email","password","post","returnSecureToken","logIn","refresh","grant_type","refresh_token","http","configFile","apiEndPoint","interceptors","request","use","isFireBase","containSlash","url","slice","expiresDate","now","id_token","expires_in","user_id","accessToken","auth","Promise","reject","response","res","content","status","console","log","toast","httpService","get","put","delete","patch","qualityService","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualiesRequested","state","qualitiesReceived","action","payload","qualitiesRequestFailed","qualitiesReducer","reducer","actions","loadQualitiesList","dispatch","getState","qualities","date","professionService","professionSlice","professionsRequested","professionsLoaded","professionsRequestFailed","professionsReducer","userEndPoint","userService","getCurrentUser","update","getRandomInt","min","max","Math","floor","random","createBrowserHistory","generateAuthError","userId","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceived","usersRequestFailed","authRequestSuccess","authRequstFailed","userCreated","push","userLoggedOut","userUpdated","userIndex","findIndex","el","userUpdateFailed","authRequested","usersReducer","userCreateRequested","createAction","createUserFailed","userUpdateRequested","redirect","code","errorMessage","createUser","updateUserData","loadUsersList","loadUserById","users","find","u","EditUserPage","setIsLoading","setData","useDispatch","currentUser","useSelector","professions","professionsLoading","professionsList","p","qualitiesLoading","qualitiesList","q","setErrors","handleSubmit","e","preventDefault","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfig","isRequired","isEmail","isValid","onSubmit","profession","sex","UserCard","user","currentUserId","location","pathname","src","image","width","role","rate","Quality","item","color","Qualities","QualitiesCard","MeetingsCard","displayDate","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","Comment","created","created_at","onRemove","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndPoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceived","commentsRequestFailed","commentDeleted","filter","com","commentAdded","commentRemoveFailed","commentAddFailed","commentsReducer","commentAddRequest","commentRemoveRequest","Comments","useParams","loadCommentsList","sortedComments","nanoid","addComment","UserPage","completedMeetings","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","SearchStatus","style","display","justifyContent","number","lastOne","Number","toString","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","Profession","getProfessionById","UserTable","onToggleBookMark","to","bookmark","UsersListPage","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","take","paginate","outline","borderRadius","placeholder","newArray","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","stayOn","loginError","isCapitalSymbol","isContainDigit","form","RegisterForm","licence","transformedData","substring","signUp","Login","formType","setFormType","toggleFormType","Footer","textAlign","href","Main","minHeight","backgroundImage","backgroundRepeat","backgroundPosition","NavProfile","isOpen","setOpen","NavBar","backgroundColor","ProtectedRoute","Component","render","props","LogOut","AppLoader","usersStatusLoading","App","exact","rootReducer","combineReducers","store","configureStore","ReactDom","document","getElementById"],"mappings":"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","file":"static/js/main.37eac28c.chunk.js","sourcesContent":["export function validator(data, config) {\n  const errors = {}\n  function validate(validateMethod, data, config) {\n    let statusValidate\n    switch (validateMethod) {\n      case 'isRequired': {\n        if (typeof data === 'boolean') {\n          statusValidate = !data\n        } else {\n          statusValidate = data.trim() === ''\n        }\n        break\n      }\n      case 'isEmail': {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n        statusValidate = !emailRegExp.test(data)\n        break\n      }\n      case 'isCapitalSymbol': {\n        const capitalRegExp = /[A-Z]+/g\n        statusValidate = !capitalRegExp.test(data)\n        break\n      }\n      case 'isContainDigit': {\n        const digitRegExp = /\\d+/g\n        statusValidate = !digitRegExp.test(data)\n        break\n      }\n      case 'min': {\n        statusValidate = data.length < config.value\n        break\n      }\n      default:\n        break\n    }\n    if (statusValidate) return config.message\n  }\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      )\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n  return errors\n}\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextField = ({\n  label,\n  type,\n  name,\n  value,\n  onChange,\n  error,\n  defaultValue\n}) => {\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n  const getInputClasses = () => {\n    return 'form-control' + (error ? ' is-invalid' : '')\n  }\n  const toggleShowPassword = () => {\n    setShowPassword((prevState) => !prevState)\n  }\n  return (\n    <div className='mb-4'>\n      <label htmlFor={name}>{label}</label>\n      <div className='input-group has-validation'>\n        <input\n          type={showPassword ? 'text' : type}\n          id={name}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          className={getInputClasses()}\n          defaultValue={defaultValue}\n        />\n        {type === 'password' && (\n          <button\n            className='btn btn-outline-secondary'\n            type='button'\n            onClick={toggleShowPassword}\n          >\n            <i className={'bi bi-eye' + (showPassword ? '-slash' : '')}></i>\n          </button>\n        )}\n        {error && <div className='invalid-feedback'>{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextField.defaultProps = {\n  type: 'text'\n}\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  defaultValue: PropTypes.string\n}\n\nexport default TextField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SelectField = ({\n  label,\n  value,\n  onChange,\n  defaultOption,\n  options,\n  error,\n  name\n}) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n  const getInputClasses = () => {\n    return 'form-select' + (error ? ' is-invalid' : '')\n  }\n\n  const optionsArray =\n    !Array.isArray(options) && typeof options === 'object'\n      ? Object.keys(options).map((optionName) => ({\n          name: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options\n\n  return (\n    <div className='mb-4'>\n      <label htmlFor={name} className='form-label'>\n        {label}\n      </label>\n      <select\n        className={getInputClasses()}\n        id={name}\n        name={name}\n        value={value}\n        onChange={handleChange}\n      >\n        <option disabled value=''>\n          {defaultOption}\n        </option>\n        {optionsArray &&\n          optionsArray.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.name}\n            </option>\n          ))}\n      </select>\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  )\n}\n\nSelectField.propTypes = {\n  defaultOption: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  name: PropTypes.string\n}\n\nexport default SelectField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n  return (\n    <div className='mb-4'>\n      <label className='form-label'>{label}</label>\n      <div>\n        {options.map((option) => (\n          <div\n            key={option.name + '_' + option.value}\n            className='form-check form-check-inline'\n          >\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              id={option.name + '_' + option.value}\n              checked={option.value === value}\n              value={option.value}\n              onChange={handleChange}\n            />\n            <label\n              className='form-check-label'\n              htmlFor={option.name + '_' + option.value}\n            >\n              {option.name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nRadioField.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n  label: PropTypes.string\n}\n\nexport default RadioField\n","import React from 'react'\nimport Select from 'react-select'\nimport PropTypes from 'prop-types'\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === 'object'\n      ? Object.keys(options).map((optionName) => ({\n          label: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options\n  const handleChange = (value) => {\n    onChange({ name: name, value })\n  }\n  return (\n    <div className='mb-4'>\n      <label className='form-label'>{label}</label>\n      <Select\n        isMulti\n        closeMenuOnSelect={false}\n        defaultValue={defaultValue}\n        options={optionsArray}\n        className='basic-multi-select'\n        classNamePrefix='select'\n        onChange={handleChange}\n        name={name}\n      />\n    </div>\n  )\n}\nMultiSelectField.propTypes = {\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  defaultValue: PropTypes.array\n}\n\nexport default MultiSelectField\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nconst BackHistoryButton = () => {\n  const history = useHistory()\n  return (\n    <button className='btn btn-primary' onClick={() => history.goBack()}>\n      <i className='bi bi-caret-left'></i>\n      Назад\n    </button>\n  )\n}\n\nexport default BackHistoryButton\n","const TOKEN_KEY = 'jwt-token'\r\nconst REFRESH_KEY = 'jwt-refresh-token'\r\nconst EXPIRES_KEY = 'jwt-expires'\r\nconst USERID_KEY = 'user-local-id'\r\n\r\nexport function setTokens({\r\n  refreshToken,\r\n  idToken,\r\n  expiresIn = 3600,\r\n  localId\r\n}) {\r\n  const expireDate = new Date().getTime() + expiresIn * 1000\r\n  localStorage.setItem(TOKEN_KEY, idToken)\r\n  localStorage.setItem(REFRESH_KEY, refreshToken)\r\n  localStorage.setItem(EXPIRES_KEY, expireDate)\r\n  localStorage.setItem(USERID_KEY, localId)\r\n}\r\n\r\nexport function getAccessToken() {\r\n  return localStorage.getItem(TOKEN_KEY)\r\n}\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_KEY)\r\n}\r\nexport function removeAuthData() {\r\n  localStorage.removeItem(TOKEN_KEY)\r\n  localStorage.removeItem(REFRESH_KEY)\r\n  localStorage.removeItem(EXPIRES_KEY)\r\n  localStorage.removeItem(USERID_KEY)\r\n}\r\nexport function getTokenExpiresDate() {\r\n  return localStorage.getItem(EXPIRES_KEY)\r\n}\r\nexport function getUserLocalId() {\r\n  return localStorage.getItem(USERID_KEY)\r\n}\r\n\r\nconst localStorageService = {\r\n  setTokens,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  getTokenExpiresDate,\r\n  getUserLocalId,\r\n  removeAuthData\r\n}\r\nexport default localStorageService\r\n","import axios from 'axios'\r\nimport localStorageService from './localStorage.service'\r\n\r\nconst httpAuth = axios.create({\r\n  baseURL: 'https://identitytoolkit.googleapis.com/v1/',\r\n  params: {\r\n    key: process.env.REACT_APP_FIREBASE_KEY\r\n  }\r\n})\r\n\r\nconst authService = {\r\n  register: async ({ email, password }) => {\r\n    const url = 'accounts:signUp'\r\n    const { data } = await httpAuth.post(url, {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    })\r\n    return data\r\n  },\r\n  logIn: async ({ email, password }) => {\r\n    const url = 'accounts:signInWithPassword'\r\n    const { data } = await httpAuth.post(url, {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    })\r\n    return data\r\n  },\r\n  refresh: async () => {\r\n    const { data } = await httpAuth.post('token', {\r\n      grant_type: 'refresh_token',\r\n      refresh_token: localStorageService.getRefreshToken()\r\n    })\r\n    return data\r\n  }\r\n}\r\n\r\nexport default authService\r\n","import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport configFile from '../config.json'\r\nimport authService from './auth.service'\r\n\r\nimport localStorageService from './localStorage.service'\r\nconst http = axios.create({\r\n  baseURL: configFile.apiEndPoint\r\n})\r\n\r\nhttp.interceptors.request.use(\r\n  async function (config) {\r\n    if (configFile.isFireBase) {\r\n      const containSlash = /\\/$/gi.test(config.url)\r\n      config.url =\r\n        (containSlash ? config.url.slice(0, -1) : config.url) + '.json'\r\n      const expiresDate = localStorageService.getTokenExpiresDate()\r\n      const refreshToken = localStorageService.getRefreshToken()\r\n      if (refreshToken && expiresDate < Date.now()) {\r\n        const data = await authService.refresh()\r\n        localStorageService.setTokens({\r\n          refreshToken: data.refresh_token,\r\n          idToken: data.id_token,\r\n          expiresIn: data.expires_in,\r\n          localId: data.user_id\r\n        })\r\n      }\r\n      const accessToken = localStorageService.getAccessToken()\r\n      if (accessToken) {\r\n        config.params = { ...config.params, auth: accessToken }\r\n      }\r\n    }\r\n    return config\r\n  },\r\n  function (error) {\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nfunction transformData(data) {\r\n  return data && !data._id\r\n    ? Object.keys(data).map((key) => ({\r\n        ...data[key]\r\n      }))\r\n    : data\r\n}\r\nhttp.interceptors.response.use(\r\n  (res) => {\r\n    if (configFile.isFireBase) {\r\n      res.data = { content: transformData(res.data) }\r\n    }\r\n    return res\r\n  },\r\n  (error) => {\r\n    const expectedErrors =\r\n      error.response &&\r\n      error.response.status >= 400 &&\r\n      error.response.status < 500\r\n    if (!expectedErrors) {\r\n      console.log(error)\r\n      toast.error('Unexpected error')\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\nconst httpService = {\r\n  get: http.get,\r\n  post: http.post,\r\n  put: http.put,\r\n  delete: http.delete,\r\n  patch: http.patch\r\n}\r\nexport default httpService\r\n","import httpService from './http.service'\r\nconst qualityEndPoint = 'quality/'\r\n\r\nconst qualityService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(qualityEndPoint)\r\n    return data\r\n  }\r\n}\r\nexport default qualityService\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport qualityService from '../services/quality.service'\r\nconst qualitiesSlice = createSlice({\r\n  name: 'qualities',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null,\r\n    lastFetch: null\r\n  },\r\n  reducers: {\r\n    qualiesRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    qualitiesReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n      state.lastFetch = Date.now()\r\n    },\r\n    qualitiesRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: qualitiesReducer } = qualitiesSlice\r\nconst { qualiesRequested, qualitiesReceived, qualitiesRequestFailed } =\r\n  qualitiesSlice.actions\r\n\r\nfunction isOutdated(date) {\r\n  if (Date.now() - date > 10 * 60 * 1000) return true\r\n  return false\r\n}\r\n\r\nexport const loadQualitiesList = () => async (dispatch, getState) => {\r\n  const { lastFetch } = getState().qualities\r\n  if (isOutdated(lastFetch)) {\r\n    dispatch(qualiesRequested())\r\n    try {\r\n      const { content } = await qualityService.get()\r\n      dispatch(qualitiesReceived(content))\r\n    } catch (error) {\r\n      dispatch(qualitiesRequestFailed(error.message))\r\n    }\r\n  }\r\n}\r\nexport const getQualities = () => (state) => state.qualities.entities\r\nexport const getQualititesLoadingStatus = () => (state) =>\r\n  state.qualities.isLoading\r\nexport const getQualitiesByIds = (id) => (state) => {\r\n  if (state.qualities.entities) {\r\n    return state.qualities.entities.find((item) => item._id === id)\r\n  }\r\n}\r\nexport default qualitiesReducer\r\n","import httpService from './http.service'\r\nconst professionEndPoint = 'profession/'\r\n\r\nconst professionService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(professionEndPoint)\r\n    return data\r\n  }\r\n}\r\nexport default professionService\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport professionService from '../services/profession.service'\r\n\r\nconst professionSlice = createSlice({\r\n  name: 'professions',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    professionsRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    professionsLoaded: (state, action) => {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n    },\r\n    professionsRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: professionsReducer } = professionSlice\r\nconst { professionsRequested, professionsLoaded, professionsRequestFailed } =\r\n  professionSlice.actions\r\n\r\nexport const loadProfessionsList = () => async (dispatch) => {\r\n  dispatch(professionsRequested())\r\n  try {\r\n    const { content } = await professionService.get()\r\n    dispatch(professionsLoaded(content))\r\n  } catch (error) {\r\n    dispatch(professionsRequestFailed(error.message))\r\n  }\r\n}\r\nexport const getProfessions = () => (state) => state.professions.entities\r\nexport const getProfessionsLoadingStatus = () => (state) =>\r\n  state.professions.isLoading\r\nexport const getProfessionById = (id) => (state) => {\r\n  if (state.professions.entities) {\r\n    return state.professions.entities.find((item) => item._id === id)\r\n  }\r\n}\r\nexport default professionsReducer\r\n","import httpService from './http.service'\r\nimport localStorageService from './localStorage.service'\r\nconst userEndPoint = 'user/'\r\n\r\nconst userService = {\r\n  get: async () => {\r\n    const { data } = await httpService.get(userEndPoint)\r\n    return data\r\n  },\r\n  create: async (payload) => {\r\n    const { data } = await httpService.put(userEndPoint + payload._id, payload)\r\n    return data\r\n  },\r\n  getCurrentUser: async () => {\r\n    const { data } = await httpService.get(\r\n      userEndPoint + localStorageService.getUserLocalId()\r\n    )\r\n    return data\r\n  },\r\n  update: async (payload) => {\r\n    try {\r\n      const { data } = await httpService.patch(\r\n        userEndPoint + localStorageService.getUserLocalId(),\r\n        payload\r\n      )\r\n      return data\r\n    } catch (error) {}\r\n  }\r\n}\r\nexport default userService\r\n","function getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min)\r\n}\r\nexport default getRandomInt\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\nexport default history\r\n","function generateAuthError(message) {\r\n  switch (message) {\r\n    case 'INVALID_PASSWORD':\r\n      return 'Password is incorrect'\r\n    case 'EMAIL_NOT_FOUND':\r\n      return 'Email not found'\r\n    case 'EMAIL_EXISTS':\r\n      return 'This email already exists'\r\n    default:\r\n      return 'Слишком много попыток входа, попробуйте позже'\r\n  }\r\n}\r\nexport default generateAuthError\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport userService from '../services/user.service'\r\nimport authService from '../services/auth.service'\r\nimport localStorageService from '../services/localStorage.service'\r\nimport getRandomInt from '../utils/getRandomInt'\r\nimport history from '../utils/history'\r\nimport generateAuthError from '../utils/generateAuthError'\r\nconst initialState = localStorageService.getAccessToken()\r\n  ? {\r\n      entities: null,\r\n      isLoading: true,\r\n      error: null,\r\n      auth: { userId: localStorageService.getUserLocalId() },\r\n      isLoggedIn: true,\r\n      dataLoaded: false\r\n    }\r\n  : {\r\n      entities: null,\r\n      isLoading: false,\r\n      error: null,\r\n      auth: null,\r\n      isLoggedIn: false,\r\n      dataLoaded: false\r\n    }\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    usersRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    usersReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n      state.dataLoaded = true\r\n    },\r\n    usersRequestFailed: (state, action) => {\r\n      state.isLoading = false\r\n      state.error = action.payload\r\n    },\r\n    authRequestSuccess: (state, action) => {\r\n      state.auth = action.payload\r\n      state.isLoggedIn = true\r\n    },\r\n    authRequstFailed: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    userCreated: (state, action) => {\r\n      if (!Array.isArray(state.entities)) {\r\n        state.entities = []\r\n      }\r\n      state.entities.push(action.payload)\r\n    },\r\n    userLoggedOut: (state) => {\r\n      state.entities = null\r\n      state.isLoggedIn = false\r\n      state.auth = null\r\n      state.dataLoaded = false\r\n    },\r\n    userUpdated: (state, action) => {\r\n      const userIndex = state.entities.findIndex(\r\n        (el) => el._id === action.payload._id\r\n      )\r\n      state.entities[userIndex] = action.payload\r\n    },\r\n    userUpdateFailed: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    authRequested: (state) => {\r\n      state.error = null\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: usersReducer } = usersSlice\r\nconst {\r\n  usersRequested,\r\n  usersReceived,\r\n  usersRequestFailed,\r\n  authRequestSuccess,\r\n  authRequstFailed,\r\n  userCreated,\r\n  userLoggedOut,\r\n  userUpdated,\r\n  userUpdateFailed,\r\n  authRequested\r\n} = usersSlice.actions\r\n\r\nconst userCreateRequested = createAction('users/userCreateRequested')\r\nconst createUserFailed = createAction('users/createUserFailed')\r\nconst userUpdateRequested = createAction('users/userUpdateRequested')\r\nexport const logIn =\r\n  ({ payload, redirect }) =>\r\n  async (dispatch) => {\r\n    const { email, password } = payload\r\n    dispatch(authRequested())\r\n    try {\r\n      const data = await authService.logIn({ email, password })\r\n      dispatch(authRequestSuccess({ userId: data.localId }))\r\n      localStorageService.setTokens(data)\r\n      history.push(redirect)\r\n    } catch (error) {\r\n      const { code, message } = error.response.data.error\r\n      if (code === 400) {\r\n        const errorMessage = generateAuthError(message)\r\n        dispatch(authRequstFailed(errorMessage))\r\n      } else dispatch(authRequstFailed(error.message))\r\n    }\r\n  }\r\nexport const logOut = () => (dispatch) => {\r\n  localStorageService.removeAuthData()\r\n  dispatch(userLoggedOut())\r\n  history.push('/')\r\n}\r\nexport const signUp =\r\n  ({ email, password, ...rest }) =>\r\n  async (dispatch) => {\r\n    dispatch(authRequested())\r\n    try {\r\n      const data = await authService.register({ email, password })\r\n      localStorageService.setTokens(data)\r\n      dispatch(authRequestSuccess({ userId: data.localId }))\r\n      dispatch(\r\n        createUser({\r\n          _id: data.localId,\r\n          email,\r\n          rate: getRandomInt(1, 5),\r\n          completedMeetings: getRandomInt(0, 200),\r\n          image: `https://avatars.dicebear.com/api/avataaars/${(\r\n            Math.random() + 1\r\n          )\r\n            .toString(36)\r\n            .substring(7)}.svg`,\r\n          ...rest\r\n        })\r\n      )\r\n    } catch (error) {\r\n      dispatch(authRequstFailed(error.message))\r\n    }\r\n  }\r\nfunction createUser(payload) {\r\n  return async function (dispatch) {\r\n    dispatch(userCreateRequested())\r\n    try {\r\n      const { content } = await userService.create(payload)\r\n      dispatch(userCreated(content))\r\n      history.push('/users')\r\n    } catch (error) {\r\n      dispatch(createUserFailed(error.message))\r\n    }\r\n  }\r\n}\r\nexport const updateUserData = (payload) => async (dispatch) => {\r\n  dispatch(userUpdateRequested())\r\n  try {\r\n    const { content } = await userService.update(payload)\r\n    dispatch(userUpdated(content))\r\n    history.push(`/users/${content._id}`)\r\n  } catch (error) {\r\n    dispatch(userUpdateFailed(error.message))\r\n  }\r\n}\r\nexport const loadUsersList = () => async (dispatch) => {\r\n  dispatch(usersRequested())\r\n  try {\r\n    const { content } = await userService.get()\r\n    dispatch(usersReceived(content))\r\n  } catch (error) {\r\n    dispatch(usersRequestFailed(error.message))\r\n  }\r\n}\r\n\r\nexport const loadUserById = (id) => (state) => {\r\n  if (state.users.entities) {\r\n    return state.users.entities.find((u) => u._id === id)\r\n  }\r\n}\r\nexport const getCurrentUserData = () => (state) => {\r\n  return state.users.entities\r\n    ? state.users.entities.find((el) => el._id === state.users.auth.userId)\r\n    : null\r\n}\r\n\r\nexport const getUsersList = () => (state) => state.users.entities\r\nexport const getDataStatus = () => (state) => state.users.dataLoaded\r\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn\r\nexport const getCurrentUserId = () => (state) => state.users.auth.userId\r\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading\r\nexport const getAuthError = () => (state) => state.users.error\r\n\r\nexport default usersReducer\r\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { validator } from '../../../utils/validator'\nimport TextField from '../../common/form/textField'\nimport SelectField from '../../common/form/selectField'\nimport RadioField from '../../common/form/radioField'\nimport MultiSelectField from '../../common/form/multiSelectField'\nimport BackHistoryButton from '../../common/backButton'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getQualities,\n  getQualititesLoadingStatus\n} from '../../../store/qualities'\nimport {\n  getProfessions,\n  getProfessionsLoadingStatus\n} from '../../../store/professions'\nimport { getCurrentUserData, updateUserData } from '../../../store/users'\n\nconst EditUserPage = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const history = useHistory()\n  const [data, setData] = useState()\n  const dispatch = useDispatch()\n  const currentUser = useSelector(getCurrentUserData())\n  const professions = useSelector(getProfessions())\n  const professionsLoading = useSelector(getProfessionsLoadingStatus())\n  const professionsList = professions.map((p) => ({\n    name: p.name,\n    value: p._id\n  }))\n  const qualitiesLoading = useSelector(getQualititesLoadingStatus())\n  const qualities = useSelector(getQualities())\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id\n  }))\n  const [errors, setErrors] = useState({})\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n    dispatch(\n      updateUserData({\n        ...data,\n        qualities: data.qualities.map((el) => el.value)\n      })\n    )\n    history.push(`/users/${currentUser._id}`)\n  }\n  function getQualitiesListByIds(qualitiesIds) {\n    const qualitiesArray = []\n    for (const qualId of qualitiesIds) {\n      for (const quality of qualities) {\n        if (qualId === quality._id) {\n          qualitiesArray.push(quality)\n          break\n        }\n      }\n    }\n    return qualitiesArray\n  }\n  const transformData = (data) => {\n    return getQualitiesListByIds(data).map((qual) => ({\n      label: qual.name,\n      value: qual._id\n    }))\n  }\n  useEffect(() => {\n    if (!professionsLoading && !qualitiesLoading && currentUser && !data) {\n      setData({\n        ...currentUser,\n        qualities: transformData(currentUser.qualities)\n      })\n    }\n  }, [professionsLoading, qualitiesLoading, currentUser, data])\n  useEffect(() => {\n    if (data && isLoading) {\n      setIsLoading(false)\n    }\n  }, [data])\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: 'Электронная почта обязательна для заполнения'\n      },\n      isEmail: {\n        message: 'Email введен некорректно'\n      }\n    },\n    name: {\n      isRequired: {\n        message: 'Введите ваше имя'\n      }\n    }\n  }\n  useEffect(() => validate(), [data])\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }))\n  }\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const isValid = Object.keys(errors).length === 0\n  return (\n    <div className='container mt-5'>\n      <BackHistoryButton />\n      <div className='row'>\n        <div className='col-md-6 offset-md-3 shadow p-4'>\n          {!isLoading && Object.keys(professions).length > 0 ? (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label='Имя'\n                name='name'\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label='Электронная почта'\n                name='email'\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectField\n                label='Выбери свою профессию'\n                defaultOption='Choose...'\n                options={professionsList}\n                name='profession'\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n              />\n              <RadioField\n                options={[\n                  { name: 'Male', value: 'male' },\n                  { name: 'Female', value: 'female' },\n                  { name: 'Other', value: 'other' }\n                ]}\n                value={data.sex}\n                name='sex'\n                onChange={handleChange}\n                label='Выберите ваш пол'\n              />\n              <MultiSelectField\n                defaultValue={data.qualities}\n                options={qualitiesList}\n                onChange={handleChange}\n                name='qualities'\n                label='Выберите ваши качества'\n              />\n              <button\n                type='submit'\n                disabled={!isValid}\n                className='btn btn-primary w-100 mx-auto'\n              >\n                Обновить\n              </button>\n            </form>\n          ) : (\n            'Loading...'\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EditUserPage\n","import EditUserPage from './editUserPage'\nexport default EditUserPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { getCurrentUserId } from '../../store/users'\nconst UserCard = ({ user }) => {\n  const history = useHistory()\n  const currentUserId = useSelector(getCurrentUserId())\n  const handleClick = () => {\n    history.push(history.location.pathname + '/edit')\n  }\n  return (\n    <div className='card mb-3'>\n      <div className='card-body'>\n        {currentUserId === user._id && (\n          <button\n            className='position-absolute top-0 end-0 btn btn-light btn-sm'\n            onClick={handleClick}\n          >\n            <i className='bi bi-gear'></i>\n          </button>\n        )}\n        <div className='d-flex flex-column align-items-center text-center position-relative'>\n          <img src={user.image} className='rounded-circle' width='150' />\n          <div className='mt-3'>\n            <h4>{user.name}</h4>\n            <p className='text-secondary mb-1'>{user.profession.name}</p>\n            <div className='text-muted'>\n              <i\n                className='bi bi-caret-down-fill text-primary'\n                role='button'\n              ></i>\n              <i className='bi bi-caret-up text-secondary' role='button'></i>\n              <span className='ms-2'>{user.rate}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nUserCard.propTypes = {\n  user: PropTypes.object\n}\n\nexport default UserCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { getQualitiesByIds } from '../../../store/qualities'\nimport { useSelector } from 'react-redux'\n\nconst Quality = ({ qual }) => {\n  const quality = useSelector(getQualitiesByIds(qual))\n  return (\n    <span className={'badge m-1 bg-' + quality.color} key={quality._id}>\n      {quality.name}\n    </span>\n  )\n}\nQuality.propTypes = {\n  qual: PropTypes.string\n}\n\nexport default Quality\n","import Qualities from './qualitiesList'\nexport default Qualities\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Quality from './quality'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getQualititesLoadingStatus,\r\n  loadQualitiesList\r\n} from '../../../store/qualities'\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n  const isLoading = useSelector(getQualititesLoadingStatus())\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList())\r\n  }, [])\r\n  return (\r\n    <>\r\n      {!isLoading &&\r\n        qualities.map((qual) => {\r\n          return <Quality key={qual} qual={qual} />\r\n        })}\r\n    </>\r\n  )\r\n}\r\n\r\nQualitiesList.propTypes = {\r\n  qualities: PropTypes.array\r\n}\r\n\r\nexport default QualitiesList\r\n","import React from 'react'\nimport Qualities from './qualities'\nimport PropTypes from 'prop-types'\n\nconst QualitiesCard = ({ data }) => {\n  return (\n    <div className='card mb-3'>\n      <div className='card-body d-flex flex-column justify-content-center text-center'>\n        <h5 className='card-title'>\n          <span>Qualities</span>\n        </h5>\n        <p className='card-text'>\n          <Qualities qualities={data} />\n        </p>\n      </div>\n    </div>\n  )\n}\nQualitiesCard.propTypes = {\n  data: PropTypes.array\n}\n\nexport default QualitiesCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst MeetingsCard = ({ value }) => {\n  return (\n    <div className='card mb-3'>\n      <div className='card-body d-flex flex-column justify-content-center text-center'>\n        <h5 className='card-title'>\n          <span>Completed meetings</span>\n        </h5>\n\n        <h1 className='display-1'>{value}</h1>\n      </div>\n    </div>\n  )\n}\nMeetingsCard.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n}\n\nexport default MeetingsCard\n","export function displayDate(data) {\n  const date = new Date(parseInt(data))\n  const dateNow = new Date()\n  const yearDif = dateNow.getFullYear() - date.getFullYear()\n  if (yearDif === 0) {\n    const dayDif = dateNow.getDate() - date.getDate()\n    if (dayDif === 0) {\n      const hourDif = dateNow.getHours() - date.getHours()\n      if (hourDif === 0) {\n        const minutesDif = dateNow.getMinutes() - date.getMinutes()\n\n        if (minutesDif >= 0 && minutesDif < 5) return '1 минуту назад'\n        if (minutesDif >= 5 && minutesDif < 10) return '5 минут назад'\n        if (minutesDif >= 10 && minutesDif < 30) {\n          return '10 минут назад'\n        }\n        return '30 минут назад'\n      }\n      return `${date.getHours()}:${date.getMinutes()}`\n    }\n\n    return `${date.getDate()} ${date.toLocaleString('default', {\n      month: 'long'\n    })}`\n  }\n  return date.getFullYear() + '.' + (date.getMonth() + 1) + '_' + date.getDate()\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { displayDate } from '../../../utils/displayDate'\nimport { useSelector } from 'react-redux'\nimport { getCurrentUserId, loadUserById } from '../../../store/users'\nconst Comment = ({\n  content,\n  created_at: created,\n  _id: id,\n  userId,\n  onRemove\n}) => {\n  const currentUserId = useSelector(getCurrentUserId())\n  const user = useSelector(loadUserById(userId))\n  return (\n    <div className='bg-light card-body  mb-3'>\n      <div className='row'>\n        (\n        <div className='col'>\n          <div className='d-flex flex-start '>\n            <img\n              src={user.image}\n              className='rounded-circle shadow-1-strong me-3'\n              alt='avatar'\n              width='65'\n              height='65'\n            />\n            <div className='flex-grow-1 flex-shrink-1'>\n              <div className='mb-4'>\n                <div className='d-flex justify-content-between align-items-center'>\n                  <p className='mb-1 '>\n                    {user && user.name}{' '}\n                    <span className='small'>- {displayDate(created)}</span>\n                  </p>\n                  {currentUserId === userId && (\n                    <button\n                      className='btn btn-sm text-primary d-flex align-items-center'\n                      onClick={() => onRemove(id)}\n                    >\n                      <i className='bi bi-x-lg'></i>\n                    </button>\n                  )}\n                </div>\n                <p className='small mb-0'>{content}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nComment.propTypes = {\n  content: PropTypes.string,\n  edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  userId: PropTypes.string,\n  onRemove: PropTypes.func,\n  _id: PropTypes.string\n}\n\nexport default Comment\n","import React from 'react'\nimport Comment from './comment'\nimport PropTypes from 'prop-types'\n\nconst CommentsList = ({ comments, onRemove }) => {\n  return comments.map((comment) => (\n    <Comment key={comment._id} {...comment} onRemove={onRemove} />\n  ))\n}\nCommentsList.propTypes = {\n  comment: PropTypes.array,\n  onRemove: PropTypes.func\n}\n\nexport default CommentsList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n  const getInputClasses = () => {\n    return 'form-control' + (error ? ' is-invalid' : '')\n  }\n\n  return (\n    <div className='mb-4'>\n      <label htmlFor={name}> {label}</label>\n      <div className='input-group has-validation'>\n        <textarea\n          id={name}\n          name={name}\n          value={value}\n          onChange={handleChange}\n          className={getInputClasses()}\n        />\n\n        {error && <div className='invalid-feedback '>{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextAreaField.defaultProps = {\n  type: 'text'\n}\nTextAreaField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n}\n\nexport default TextAreaField\n","import React, { useState } from 'react'\nimport TextAreaField from '../form/textAreaField'\nimport { validator } from '../../../utils/validator'\nimport PropTypes from 'prop-types'\n\nconst AddCommentForm = ({ onSubmit }) => {\n  const [data, setData] = useState({})\n  const [errors, setErrors] = useState({})\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }))\n  }\n  const validatorConfig = {\n    content: {\n      isRequired: {\n        message: 'Сообщение не может быть пустым'\n      }\n    }\n  }\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const clearForm = () => {\n    setData({})\n    setErrors({})\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n    onSubmit(data)\n    clearForm()\n  }\n  return (\n    <div>\n      <h2>New comment</h2>\n      <form onSubmit={handleSubmit}>\n        <TextAreaField\n          value={data.content || ''}\n          onChange={handleChange}\n          name='content'\n          label='Сообщение'\n          error={errors.content}\n        />\n        <div className='d-flex justify-content-end'>\n          <button className='btn btn-primary'>Опубликовать</button>\n        </div>\n      </form>\n    </div>\n  )\n}\nAddCommentForm.propTypes = {\n  onSubmit: PropTypes.func\n}\n\nexport default AddCommentForm\n","import CommentsList from './commentsList'\nimport AddCommentForm from './addCommentForm'\nexport default CommentsList\nexport { AddCommentForm }\n","import httpService from './http.service'\r\nconst commentEndPoint = 'comment/'\r\n\r\nconst commentService = {\r\n  createComment: async (payload) => {\r\n    const { data } = await httpService.put(\r\n      commentEndPoint + payload._id,\r\n      payload\r\n    )\r\n    return data\r\n  },\r\n  getComments: async (pageId) => {\r\n    const { data } = await httpService.get(commentEndPoint, {\r\n      params: {\r\n        orderBy: '\"pageId\"',\r\n        equalTo: `\"${pageId}\"`\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  removeComment: async (commentId) => {\r\n    const { data } = await httpService.delete(commentEndPoint + commentId)\r\n    return data\r\n  }\r\n}\r\nexport default commentService\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { nanoid } from 'nanoid'\r\nimport commentService from '../services/comment.service'\r\nconst commentsSlice = createSlice({\r\n  name: 'comments',\r\n  initialState: {\r\n    entities: null,\r\n    isLoading: true,\r\n    error: null\r\n  },\r\n  reducers: {\r\n    commentsRequested: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    commentsReceived: (state, action) => {\r\n      state.entities = action.payload\r\n      state.isLoading = false\r\n    },\r\n    commentsRequestFailed: (state, action) => {\r\n      state.error = action.payload\r\n      state.isLoading = false\r\n    },\r\n    commentDeleted: (state, action) => {\r\n      state.entities = state.entities.filter(\r\n        (com) => com._id !== action.payload\r\n      )\r\n    },\r\n    commentAdded: (state, action) => {\r\n      state.entities.push(action.payload)\r\n    },\r\n    commentRemoveFailed: (state, action) => {\r\n      state.error = action.payload\r\n    },\r\n    commentAddFailed: (state, action) => {\r\n      state.error = action.payload\r\n    }\r\n  }\r\n})\r\n\r\nconst { reducer: commentsReducer } = commentsSlice\r\nconst {\r\n  commentsRequested,\r\n  commentsReceived,\r\n  commentsRequestFailed,\r\n  commentDeleted,\r\n  commentAdded,\r\n  commentRemoveFailed,\r\n  commentAddFailed\r\n} = commentsSlice.actions\r\n\r\nconst commentAddRequest = createAction('comments/commentAddRequest')\r\nconst commentRemoveRequest = createAction('comments/commentRemoveRequest')\r\nexport const loadCommentsList = (userId) => async (dispatch) => {\r\n  dispatch(commentsRequested())\r\n  try {\r\n    const { content } = await commentService.getComments(userId)\r\n    dispatch(commentsReceived(content))\r\n  } catch (error) {\r\n    dispatch(commentsRequestFailed(error.message))\r\n  }\r\n}\r\nexport const removeComment = (id) => async (dispatch) => {\r\n  dispatch(commentRemoveRequest())\r\n  try {\r\n    const { content } = await commentService.removeComment(id)\r\n    if (content === null) {\r\n      dispatch(commentDeleted(id))\r\n    }\r\n  } catch (error) {\r\n    dispatch(commentRemoveFailed(error.message))\r\n  }\r\n}\r\nexport const addComment =\r\n  ({ content, currentUserId, userId }) =>\r\n  async (dispatch) => {\r\n    dispatch(commentAddRequest())\r\n    const comment = {\r\n      _id: nanoid(),\r\n      content: content,\r\n      pageId: userId,\r\n      created_at: Date.now(),\r\n      userId: currentUserId\r\n    }\r\n    try {\r\n      const { content } = await commentService.createComment(comment)\r\n      dispatch(commentAdded(content))\r\n    } catch (error) {\r\n      dispatch(commentAddFailed(error))\r\n    }\r\n  }\r\nexport const getComments = () => (state) => state.comments.entities\r\nexport const getCommentsLoadingStatus = () => (state) =>\r\n  state.comments.isLoading\r\n\r\nexport default commentsReducer\r\n","import { orderBy } from 'lodash'\nimport React, { useEffect } from 'react'\nimport CommentsList, { AddCommentForm } from '../common/comments'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  addComment,\n  getComments,\n  getCommentsLoadingStatus,\n  loadCommentsList,\n  removeComment\n} from '../../store/comments'\nimport { useParams } from 'react-router-dom'\nimport { getCurrentUserId } from '../../store/users'\n\nconst Comments = () => {\n  const { userId } = useParams()\n  const dispatch = useDispatch()\n  const currentUserId = useSelector(getCurrentUserId())\n\n  const isLoading = useSelector(getCommentsLoadingStatus())\n  const comments = useSelector(getComments())\n  const handleSubmit = (data) => {\n    dispatch(addComment({ content: data.content, userId, currentUserId }))\n  }\n  const handleRemoveComment = (id) => {\n    dispatch(removeComment(id))\n  }\n  useEffect(() => {\n    dispatch(loadCommentsList(userId))\n  }, [userId])\n  const sortedComments = orderBy(comments, ['created_at'], ['desc'])\n  return (\n    <>\n      <div className='card mb-2'>\n        {' '}\n        <div className='card-body '>\n          <AddCommentForm onSubmit={handleSubmit} />\n        </div>\n      </div>\n      {sortedComments.length > 0 && (\n        <div className='card mb-3'>\n          <div className='card-body '>\n            <h2>Comments</h2>\n            <hr />\n            {!isLoading && (\n              <CommentsList\n                comments={sortedComments}\n                onRemove={handleRemoveComment}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Comments\n","import UserPage from './userPage'\nexport default UserPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport UserCard from '../../ui/userCard'\nimport QualitiesCard from '../../ui/qualitiesCard'\nimport MeetingsCard from '../../ui/meetingsCard'\nimport Comments from '../../ui/comments'\nimport { useSelector } from 'react-redux'\nimport { loadUserById } from '../../../store/users'\n\nconst UserPage = ({ userId }) => {\n  const user = useSelector(loadUserById(userId))\n  if (user) {\n    return (\n      <div className='container'>\n        <div className='row gutters-sm'>\n          <div className='col-md-4 mb-3'>\n            <UserCard user={user} />\n            <QualitiesCard data={user.qualities} />\n            <MeetingsCard value={user.completedMeetings} />\n          </div>\n          <div className='col-md-8'>\n            <Comments />\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return <h1>Loading</h1>\n  }\n}\n\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired\n}\n\nexport default UserPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize)\n  if (pagesCount === 1) return null\n  const pages = _.range(1, pagesCount + 1)\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pages.map((page) => (\n          <li\n            className={'page-item ' + (page === currentPage ? 'active' : '')}\n            key={'page_' + page}\n          >\n            <button\n              className='page-link'\n              onClick={() => {\n                onPageChange(page)\n              }}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  if (!Array.isArray(items)) {\n    return (\n      <ul className='list-group'>\n        {Object.keys(items).map((item) => (\n          <li\n            key={items[item][valueProperty]}\n            className={\n              'list-group-item' +\n              (items[item] === selectedItem ? ' active' : '')\n            }\n            onClick={() => onItemSelect(items[item])}\n            role='button'\n          >\n            {items[item][contentProperty]}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n  return (\n    <ul className='list-group'>\n      {items.map((item) => (\n        <li\n          key={item[valueProperty]}\n          className={\n            'list-group-item' + (item === selectedItem ? ' active' : '')\n          }\n          onClick={() => onItemSelect(item)}\n          role='button'\n        >\n          {item[contentProperty]}\n        </li>\n      ))}\n    </ul>\n  )\n}\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name'\n}\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n}\n\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst SearchStatus = ({ length }) => {\n  const renderPhrase = (number) => {\n    const lastOne = Number(number.toString().slice(-1))\n    if (number > 4 && number < 15) {\n      return 'человек тусанет'\n    }\n    if (lastOne === 1) return 'человек тусанет'\n    if ([2, 3, 4].indexOf(lastOne) >= 0) return 'человека тусанут'\n    return 'человек тусанет'\n  }\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center'\n      }}\n    >\n      <h2>\n        <span className={'badge ' + (length > 0 ? 'bg-primary' : 'bg-danger')}>\n          {length > 0\n            ? `${length + ' ' + renderPhrase(length)}   с тобой сегодня`\n            : 'Никто с тобой не тусанет'}\n        </span>\n      </h2>\n    </div>\n  )\n}\nSearchStatus.propTypes = {\n  length: PropTypes.number\n}\n\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst BookMark = ({ status, ...rest }) => {\n  return (\n    <button {...rest}>\n      <i className={'bi bi-bookmark' + (status ? '-heart-fill' : '')}></i>\n    </button>\n  )\n}\nBookMark.propTypes = {\n  status: PropTypes.bool\n}\n\nexport default BookMark\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return component\n    }\n    return _.get(item, columns[column].path)\n  }\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map((column) => (\n            <td key={column}>{renderContent(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n}\n\nexport default TableBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n  const handleSort = (item) => {\n    if (selectedSort.path === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === 'asc' ? 'desc' : 'asc'\n      })\n    } else {\n      onSort({ path: item, order: 'asc' })\n    }\n  }\n  const rendeSortArrow = (selectedSort, currentPath) => {\n    if (selectedSort.path === currentPath) {\n      if (selectedSort.order === 'asc') {\n        return <i className='bi bi-caret-down-fill'></i>\n      } else {\n        return <i className='bi bi-caret-up-fill'></i>\n      }\n    }\n    return null\n  }\n\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            key={column}\n            onClick={\n              columns[column].path\n                ? () => handleSort(columns[column].path)\n                : undefined\n            }\n            {...{ role: columns[column].path && 'button' }}\n            scope='col'\n          >\n            {columns[column].name}{' '}\n            {rendeSortArrow(selectedSort, columns[column].path)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n}\n\nexport default TableHeader\n","import Table from './table'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nexport default Table\n\nexport { TableBody, TableHeader }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport TableBody from './tableBody'\nimport TableHeader from './tableHeader'\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n  return (\n    <table className='table'>\n      {children || (\n        <>\n          <TableHeader {...{ onSort, selectedSort, columns }} />\n          <TableBody {...{ columns, data }} />\n        </>\n      )}\n    </table>\n  )\n}\nTable.propTypes = {\n  onSort: PropTypes.func,\n  selectedSort: PropTypes.object,\n  columns: PropTypes.object,\n  data: PropTypes.array,\n  children: PropTypes.array\n}\n\nexport default Table\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport {\r\n  getProfessionsLoadingStatus,\r\n  getProfessionById\r\n} from '../../store/professions'\r\nconst Profession = ({ id }) => {\r\n  const professionsLoading = useSelector(getProfessionsLoadingStatus())\r\n  const profession = useSelector(getProfessionById(id))\r\n  return <div key={id}>{!professionsLoading && profession.name}</div>\r\n}\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n}\r\nexport default Profession\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport BookMark from '../common/bookmark'\nimport Qualities from './qualities'\nimport Table from '../common/table'\nimport { Link } from 'react-router-dom'\nimport Profession from './profession'\n\nconst UserTable = ({\n  users,\n  onSort,\n  selectedSort,\n  onToggleBookMark,\n  ...rest\n}) => {\n  const columns = {\n    name: {\n      path: 'name',\n      name: 'Имя',\n      component: (user) => (\n        <Link\n          className='text-dark text-decoration-none'\n          to={`/users/${user._id}`}\n        >\n          {user.name}\n        </Link>\n      )\n    },\n    qualities: {\n      name: 'Качества',\n      component: (user) => <Qualities qualities={user.qualities} />\n    },\n    professions: {\n      name: 'Профессия',\n      component: (user) => <Profession id={user.profession} />\n    },\n    completedMeetings: {\n      path: 'completedMeetings',\n      name: 'Встретился, раз'\n    },\n    rate: { path: 'rate', name: 'Оценка' },\n    bookmark: {\n      path: 'bookmark',\n      name: 'Избранное',\n      component: (user) => (\n        <BookMark\n          status={user.bookmark}\n          onClick={() => onToggleBookMark(user._id)}\n        />\n      )\n    }\n  }\n  return (\n    <div className='container-fluid'>\n      <Table\n        onSort={onSort}\n        selectedSort={selectedSort}\n        columns={columns}\n        data={users}\n      />\n    </div>\n  )\n}\n\nUserTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  onToggleBookMark: PropTypes.func.isRequired\n}\n\nexport default UserTable\n","import UsersListPage from './usersListPage'\nexport default UsersListPage\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { paginate } from '../../../utils/paginate'\nimport Pagination from '../../common/pagination'\nimport GroupList from '../../common/groupList'\nimport SearchStatus from '../../ui/searchStatus'\nimport UserTable from '../../ui/usersTable'\nimport _ from 'lodash'\nimport { useSelector } from 'react-redux'\nimport {\n  getProfessions,\n  getProfessionsLoadingStatus\n} from '../../../store/professions'\nimport { getCurrentUserId, getUsersList } from '../../../store/users'\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const [searchQuery, setSearchQuery] = useState('')\n  const [selectedProf, setSelectedProf] = useState()\n  const [sortBy, setSortBy] = useState({ path: 'name', order: 'asc' })\n  const pageSize = 8\n  const currentUserId = useSelector(getCurrentUserId())\n  const users = useSelector(getUsersList())\n  const professions = useSelector(getProfessions())\n  const professionsLoading = useSelector(getProfessionsLoadingStatus())\n  const handleToggleBookMark = (id) => {\n    const newArray = users.map((user) => {\n      if (user._id === id) {\n        return { ...user, bookmark: !user.bookmark }\n      }\n      return user\n    })\n    console.log(newArray)\n  }\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf, searchQuery])\n\n  const handleProfessionSelect = (item) => {\n    if (searchQuery !== '') setSearchQuery('')\n    setSelectedProf(item)\n  }\n  const handleSearchQuery = ({ target }) => {\n    setSelectedProf(undefined)\n    setSearchQuery(target.value)\n  }\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n  const handleSort = (item) => {\n    setSortBy(item)\n  }\n\n  function filterUsers(data) {\n    const filteredUsers = searchQuery\n      ? data.filter(\n          (user) =>\n            user.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1\n        )\n      : selectedProf\n      ? data.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf._id)\n        )\n      : data\n    return filteredUsers.filter((u) => {\n      return u._id !== currentUserId\n    })\n  }\n  const filteredUsers = filterUsers(users)\n  const count = filteredUsers.length\n  const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order])\n  const usersCrop = paginate(sortedUsers, currentPage, pageSize)\n  const clearFilter = () => {\n    setSelectedProf()\n  }\n\n  return (\n    <div className='container-fluid d-flex'>\n      {!professionsLoading && (\n        <div className='d-flex flex-column flex-shrink-0 p-3'>\n          <GroupList\n            selectedItem={selectedProf}\n            items={professions}\n            onItemSelect={handleProfessionSelect}\n          />\n          <button className='btn btn-secondary mt-2' onClick={clearFilter}>\n            {' '}\n            Очистить\n          </button>\n        </div>\n      )}\n      <div\n        className='d-flex flex-column'\n        style={{\n          outline: '1px solid lightblue',\n          borderRadius: '5px'\n        }}\n      >\n        <SearchStatus length={count} />\n        <input\n          type='text'\n          name='searchQuery'\n          placeholder='Search...'\n          onChange={handleSearchQuery}\n          value={searchQuery}\n        />\n        {count > 0 && (\n          <UserTable\n            users={usersCrop}\n            onSort={handleSort}\n            selectedSort={sortBy}\n            onToggleBookMark={handleToggleBookMark}\n          />\n        )}\n        <div className='d-flex justify-content-center'>\n          <Pagination\n            itemsCount={count}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\nUsersListPage.propTypes = {\n  users: PropTypes.array\n}\n\nexport default UsersListPage\n","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize\n  return _(items).slice(startIndex).take(pageSize).value()\n}\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataStatus, loadUsersList } from '../../../store/users'\r\nimport PropTypes from 'prop-types'\r\nconst UsersLoader = ({ children }) => {\r\n  const dataStatus = useSelector(getDataStatus())\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    console.log(dataStatus)\r\n    if (!dataStatus) dispatch(loadUsersList())\r\n  }, [])\r\n  if (!dataStatus) return 'Loading'\r\n  return children\r\n}\r\n\r\nUsersLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default UsersLoader\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams, Redirect } from 'react-router-dom'\nimport EditUserPage from '../components/page/editUserPage'\nimport UserPage from '../components/page/userPage'\nimport UsersListPage from '../components/page/usersListPage'\nimport UsersLoader from '../components/ui/hoc/usersLoader'\nimport { getCurrentUserId } from '../store/users'\nconst Users = () => {\n  const params = useParams()\n  const { userId, edit } = params\n  const currentUserId = useSelector(getCurrentUserId())\n  return (\n    <>\n      <UsersLoader>\n        {userId ? (\n          edit ? (\n            userId === currentUserId ? (\n              <EditUserPage />\n            ) : (\n              <Redirect to={`/users/${currentUserId}/edit`} />\n            )\n          ) : (\n            <UserPage userId={userId} />\n          )\n        ) : (\n          <UsersListPage />\n        )}\n      </UsersLoader>\n    </>\n  )\n}\n\nexport default Users\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n  const handleChange = () => {\n    onChange({ name: name, value: !value })\n  }\n  const getInputClasses = () => {\n    return 'form-check-input' + (error ? ' is-invalid' : '')\n  }\n  return (\n    <div className='form-check mb-4'>\n      <input\n        className={getInputClasses()}\n        type='checkbox'\n        value=''\n        id={name}\n        onChange={handleChange}\n        checked={value}\n      />\n      <label className='form-check-label' htmlFor={name}>\n        {children}\n      </label>\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  )\n}\nCheckBoxField.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  error: PropTypes.string\n}\n\nexport default CheckBoxField\n","import React, { useEffect, useState } from 'react'\nimport { validator } from '../../utils/validator'\nimport TextField from '../common/form/textField'\nimport CheckBoxField from '../common/form/checkBoxField'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAuthError, logIn } from '../../store/users'\nimport history from '../../utils/history'\n\nconst LoginForm = () => {\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    stayOn: false\n  })\n  const loginError = useSelector(getAuthError())\n  const [errors, setErrors] = useState({})\n  const dispatch = useDispatch()\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }))\n  }\n  const handleDemoLogin = () => {\n    const redirect = history.location.state\n      ? history.location.state.form.pathname\n      : '/'\n    dispatch(\n      logIn({\n        payload: {\n          email: 'test@gmail.com',\n          password: 'Test1234',\n          stayOn: false\n        },\n        redirect\n      })\n    )\n  }\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: 'Электронная почта обязательна для заполнения'\n      },\n      isEmail: {\n        message: 'Email введен некорректно'\n      }\n    },\n    password: {\n      isRequired: {\n        message: 'Пароль обязателен для заполнения'\n      },\n      isCapitalSymbol: {\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\n      },\n      isContainDigit: {\n        message: 'Пароль должен содержать хотя бы одно число'\n      },\n      min: {\n        message: 'Пароль должен состоять минимум из 8 символов',\n        value: 8\n      }\n    }\n  }\n  useEffect(() => {\n    validate()\n  }, [data])\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const isValid = Object.keys(errors).length === 0\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n    const redirect = history.location.state\n      ? history.location.state.form.pathname\n      : '/'\n    dispatch(logIn({ payload: data, redirect }))\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label='Электронная почта'\n        name='email'\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n        defaultValue='test@gmail.com'\n      />\n      <TextField\n        label='Пароль'\n        type='password'\n        name='password'\n        defaultValue='Test1234'\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <CheckBoxField value={data.stayOn} onChange={handleChange} name='stayOn'>\n        Оставаться в системе\n      </CheckBoxField>\n      {loginError && <p className='text-danger'>{loginError}</p>}\n      <button\n        className='btn btn-primary w-100 mx-auto'\n        type='submit'\n        disabled={!isValid}\n      >\n        Login\n      </button>\n      <button\n        className='btn btn-outline-success w-100 my-2 mx-auto'\n        onClick={handleDemoLogin}\n      >\n        Demo Login\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","import React, { useEffect, useState } from 'react'\nimport { validator } from '../../utils/validator'\nimport TextField from '../common/form/textField'\nimport SelectField from '../common/form/selectField'\nimport RadioField from '../common/form/radioField'\nimport MultiSelectField from '../common/form/multiSelectField'\nimport CheckBoxField from '../common/form/checkBoxField'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getQualities } from '../../store/qualities'\nimport { getProfessions } from '../../store/professions'\nimport { signUp } from '../../store/users'\nconst RegisterForm = () => {\n  const dispatch = useDispatch()\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    name: '',\n    qualities: [],\n    licence: false\n  })\n  const qualities = useSelector(getQualities())\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id\n  }))\n  const professions = useSelector(getProfessions())\n\n  const professionsList = professions.map((p) => ({\n    name: p.name,\n    value: p._id\n  }))\n  const [errors, setErrors] = useState({})\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value\n    }))\n  }\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: 'Электронная почта обязательна для заполнения'\n      },\n      isEmail: {\n        message: 'Email введен некорректно'\n      }\n    },\n    name: {\n      isRequired: {\n        message: 'Имя обязательно для заполнения'\n      },\n      min: {\n        message: 'Имя должно состоять минимум из 3 символов',\n        value: 8\n      }\n    },\n    password: {\n      isRequired: {\n        message: 'Пароль обязателен для заполнения'\n      },\n      isCapitalSymbol: {\n        message: 'Пароль должен содержать хотя бы одну заглавную букву'\n      },\n      isContainDigit: {\n        message: 'Пароль должен содержать хотя бы одно число'\n      },\n      min: {\n        message: 'Пароль должен состоять минимум из 8 символов',\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: 'Обязательно выберите вашу профессию'\n      }\n    },\n    licence: {\n      isRequired: {\n        message:\n          'Вы не можете использовать наш сервис без подтверждения лицензионного соглашения'\n      }\n    }\n  }\n  useEffect(() => {\n    validate()\n  }, [data])\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const isValid = Object.keys(errors).length === 0\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const isValid = validate()\n    if (!isValid) return\n    const transformedData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value)\n    }\n    dispatch(signUp(transformedData))\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label='Электронная почта'\n        name='email'\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label='Имя'\n        name='name'\n        value={data.name}\n        onChange={handleChange}\n        error={errors.name}\n      />\n      <TextField\n        label='Пароль'\n        type='password'\n        name='password'\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectField\n        label='Выбери свою профессию'\n        defaultOption='Choose...'\n        options={professionsList}\n        name='profession'\n        onChange={handleChange}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        options={[\n          { name: 'Male', value: 'male' },\n          { name: 'Female', value: 'female' },\n          { name: 'Other', value: 'other' }\n        ]}\n        value={data.sex}\n        name='sex'\n        onChange={handleChange}\n        label='Выберите ваш пол'\n      />\n      <MultiSelectField\n        options={qualitiesList}\n        onChange={handleChange}\n        defaultValue={data.qualities}\n        name='qualities'\n        label='Выберите ваши качества'\n      />\n      <CheckBoxField\n        value={data.licence}\n        onChange={handleChange}\n        name='licence'\n        error={errors.licence}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button\n        className='btn btn-primary w-100 mx-auto'\n        type='submit'\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default RegisterForm\n","import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport LoginForm from '../components/ui/loginForm'\nimport RegisterForm from '../components/ui/registerForm'\n\nconst Login = () => {\n  const { type } = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n  const toggleFormType = (params) => {\n    setFormType((prevState) =>\n      prevState === 'register' ? 'login' : 'register'\n    )\n  }\n\n  return (\n    <div className='container mt-5'>\n      <div className='row'>\n        <div className='col-md-6 offset-md-3 shadow p-4'>\n          {formType === 'register' ? (\n            <>\n              <h3 className='mb-4'>Register</h3>\n              <RegisterForm />\n              <p>\n                Already have account?{' '}\n                <a role='button' onClick={toggleFormType}>\n                  {' '}\n                  Sign In\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <h3 className='mb-4'>Login</h3>\n              <LoginForm />\n              <p>\n                Dont have account?{' '}\n                <a role='button' onClick={toggleFormType}>\n                  {' '}\n                  Sign Up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\r\nimport './footer.css'\r\nconst Footer = () => {\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div className='row' style={{ textAlign: 'center' }}>\r\n        <h2>More info:</h2>\r\n      </div>\r\n      <footer className='footer-bs'>\r\n        <div className='row'>\r\n          <div className='col-8 footer-brand animated fadeInLeft'>\r\n            <h2>Logo</h2>\r\n            <p>\r\n              Suspendisse hendrerit tellus laoreet luctus pharetra. Aliquam\r\n              porttitor vitae orci nec ultricies. Curabitur vehicula, libero\r\n              eget faucibus faucibus, purus erat eleifend enim, porta\r\n              pellentesque ex mi ut sem. Suspendisse hendrerit tellus laoreet\r\n              luctus pharetra. Aliquam porttitor vitae orci nec ultricies.\r\n              Curabitur vehicula, libero eget faucibus faucibus, purus erat\r\n              eleifend enim, porta pellentesque ex mi ut sem.\r\n            </p>\r\n\r\n            <p>© 2022 Yehor, All rights reserved ;)</p>\r\n          </div>\r\n          <div className='col-4 footer-nav animated fadeInUp'>\r\n            <h4>Contact me at:</h4>\r\n            <div className='col'>\r\n              <ul className='pages'>\r\n                <li>\r\n                  <a href='https://github.com/YehorFomichov'>My Github</a>\r\n                </li>\r\n                <li>\r\n                  <a href='https://www.linkedin.com/in/yehor-fomichov-486304233/'>\r\n                    Linked In\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href='mailto:yehor.fomichov@gmail.com'>Email</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Footer from '../components/ui/footer'\nimport { getIsLoggedIn } from '../store/users'\nconst URL =\n  'https://unsplash.com/photos/pb_lF8VWaPU/download?ixid=MnwxMjA3fDB8MXxzZWFyY2h8NTZ8fHNvY2lhbCUyMG1lZGlhfGVufDB8fHx8MTY0OTc3NTIwOA&force=true&w=1920'\nconst Main = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn())\n  return (\n    <div className='container-fluid'>\n      <div className='container-fluid'>\n        <div className='container-fluid d-flex flex-column'>\n          <div\n            style={{\n              minHeight: '600px',\n              backgroundImage: `url('${URL}')`,\n              backgroundRepeat: 'no-repeat',\n              backgroundPosition: 'center'\n            }}\n          ></div>\n          {!isLoggedIn && (\n            <>\n              <h1 className='position-absolute m-3 text-light'>Main Page</h1>\n              <h3 className='position-absolute m-3 pt-5 text-light'>\n                Please{' '}\n                <Link to='/login' className='text-light'>\n                  Login\n                </Link>{' '}\n                to continue\n              </h3>\n            </>\n          )}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Main\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getCurrentUserData } from '../../store/users'\r\n\r\nconst NavProfile = () => {\r\n  const currentUser = useSelector(getCurrentUserData())\r\n  const [isOpen, setOpen] = useState(false)\r\n  const toggleMenu = () => {\r\n    setOpen((prevState) => !prevState)\r\n  }\r\n  if (!currentUser) return <Link to='/login'>Login</Link>\r\n  return (\r\n    <div className='dropdown' onClick={toggleMenu}>\r\n      <div className='btn dropdown-toggle d-flex align-items-center'>\r\n        <div className='me-2 text-white'>{currentUser.name}</div>\r\n        <img\r\n          src={currentUser.image}\r\n          alt=''\r\n          height='40'\r\n          className='img-responsive rounded-circle'\r\n        />\r\n      </div>\r\n      <div className={'w-100 dropdown-menu' + (isOpen ? ' show' : '')}>\r\n        <Link to={`/users/${currentUser._id}`} className='dropdown-item'>\r\n          Profile\r\n        </Link>\r\n        <Link to='/logout' className='dropdown-item'>\r\n          Log out\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavProfile\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getIsLoggedIn } from '../../store/users'\nimport NavProfile from './navProfile'\nconst NavBar = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn())\n  return (\n    <nav className='navbar mb-3' style={{ backgroundColor: '#3c3d41' }}>\n      <div className='container-fluid'>\n        <ul className='nav'>\n          <li className='nav-item'>\n            <Link className='nav-link text-white' aria-current='page' to='/'>\n              Main\n            </Link>\n          </li>\n          {isLoggedIn && (\n            <li className='nav-item'>\n              <Link\n                className='nav-link text-white'\n                aria-current='page'\n                to='/users'\n              >\n                Users\n              </Link>\n            </li>\n          )}\n        </ul>\n        <div className='d-flex'>\n          {isLoggedIn ? (\n            <NavProfile />\n          ) : (\n            <Link\n              className='nav-link text-white'\n              aria-current='page'\n              to='/login'\n            >\n              Login\n            </Link>\n          )}\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport { getIsLoggedIn } from '../../store/users'\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn())\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isLoggedIn) {\r\n          return <Redirect to='/login' />\r\n        }\r\n        return Component ? <Component {...props} /> : children\r\n      }}\r\n    />\r\n  )\r\n}\r\nProtectedRoute.propTypes = {\r\n  component: PropTypes.func,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default ProtectedRoute\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logOut } from '../store/users'\r\n\r\nconst LogOut = () => {\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(logOut())\r\n  }, [])\r\n  return <div>Loading...</div>\r\n}\r\n\r\nexport default LogOut\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadProfessionsList } from '../../../store/professions'\r\nimport { loadQualitiesList } from '../../../store/qualities'\r\nimport {\r\n  getIsLoggedIn,\r\n  getUsersLoadingStatus,\r\n  loadUsersList\r\n} from '../../../store/users'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AppLoader = ({ children }) => {\r\n  const dispatch = useDispatch()\r\n  const isLoggedIn = useSelector(getIsLoggedIn())\r\n  const usersStatusLoading = useSelector(getUsersLoadingStatus())\r\n  useEffect(() => {\r\n    dispatch(loadQualitiesList())\r\n    dispatch(loadProfessionsList())\r\n    if (isLoggedIn) {\r\n      dispatch(loadUsersList())\r\n    }\r\n  }, [isLoggedIn])\r\n  if (usersStatusLoading) return 'Loading...'\r\n  return children\r\n}\r\nAppLoader.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\nexport default AppLoader\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport Users from './layouts/users'\r\nimport Login from './layouts/login'\r\nimport Main from './layouts/main'\r\nimport NavBar from './components/ui/navBar'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport ProtectedRoute from './components/common/protectedRoute'\r\nimport LogOut from './layouts/logout'\r\nimport AppLoader from './components/ui/hoc/appLoader'\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <AppLoader>\r\n        <NavBar />\r\n        <Switch>\r\n          <ProtectedRoute path='/users/:userId?/:edit?' component={Users} />\r\n          <Route path='/login/:type?' component={Login} />\r\n          <Route path='/logout' component={LogOut} />\r\n          <Route path='/' exact component={Main} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </AppLoader>\r\n      <ToastContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport commentsReducer from './comments'\r\nimport professionsReducer from './professions'\r\nimport qualitiesReducer from './qualities'\r\nimport usersReducer from './users'\r\n\r\nconst rootReducer = combineReducers({\r\n  qualities: qualitiesReducer,\r\n  professions: professionsReducer,\r\n  users: usersReducer,\r\n  comments: commentsReducer\r\n})\r\n\r\nexport function createStore() {\r\n  return configureStore({\r\n    reducer: rootReducer\r\n  })\r\n}\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './app/App'\r\nimport { Router } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport { createStore } from './app/store/createStore'\r\nimport { Provider } from 'react-redux'\r\nimport history from './app/utils/history'\r\nconst store = createStore()\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}