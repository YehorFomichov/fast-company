{"version":3,"sources":["app/components/ui/navBar.jsx","app/components/page/notFound.jsx","app/components/common/form/textField.jsx","app/components/common/form/checkboxField.jsx","app/components/ui/loginForm.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiselectField.jsx","app/components/ui/registerForm.jsx","app/utils/validator.js","app/layouts/login.jsx","app/layouts/main.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/ui/qualities/qualitiesList.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/utils/dateConvert.js","app/components/page/userPage/comment.jsx","app/components/page/userPage/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/page/userEdit.jsx","app/App.js","index.js"],"names":["NavBar","className","to","NotFound","TextField","label","type","name","value","onChange","error","useState","showPassword","setShowPassword","htmlFor","id","target","onClick","prevstate","defaultProps","CheckboxField","children","checked","LoginForm","email","password","stayOn","data","setData","errors","setErrors","handleChange","prevState","validateScheme","yup","shape","required","matches","useEffect","validate","isValid","Object","keys","length","then","catch","err","path","message","onSubmit","event","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectField","defaultOption","options","optionsArray","Array","isArray","map","option","optionName","returnValue","RadioField","MultiselectField","defaultValue","d","element","isMulti","closeMenuOnSelect","classNamePrefix","returnArray","el","RegisterForm","setQualities","licence","setProfessions","api","updatedProfessions","updatedQualities","quality","validatorConfig","isRequired","isEmail","isCapital","isContainDigits","min","config","validateMethod","statusValidate","trim","test","fieldName","validator","Login","useParams","formType","setFormType","toggleFormType","role","style","Main","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","href","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","backgroundColor","fontWeight","boxShadow","margin","index","SearchStatus","numberOfUsers","textAlign","fontSize","borderRadius","width","marginBottom","number","lastDigit","getCase","Bookmark","status","height","fill","viewBox","QuailitiesList","getQualityClass","renderQualities","TableBody","columns","renderContent","column","component","get","TableHeader","onSort","currentSort","order","scope","xmlns","Table","UsersTable","onToggleBookmark","onDelete","filtered","delete","dateConvert","currentTime","d1","d2","Number","minute","diff","date","month","getUTCMonth","monthString","day","getUTCDate","monthDays","Comment","commentedUser","commentContent","publishingTime","src","substring","alt","Comments","setComments","setUsers","comment","UserPage","setUser","selected","rows","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","searchByName","setSearchByName","sortBy","setSortBy","toggleHandleBookmark","filteredUsers","toLowerCase","includes","toLocaleLowerCase","count","userCrop","pageNumber","startIndex","splice","paginate","orderBy","paddingTop","backgroundPosition","undefined","pageIndex","Users","UserEdit","App","exact","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.c57da9a5.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nconst NavBar = () => {\n  return (\n    <div className='bg text-white'>\n      <ul className='nav'>\n        <li className='nav-item'>\n          <Link className='nav-link' to='/fast-company'>\n            Main\n          </Link>\n        </li>\n        <li className='nav-item'>\n          <Link className='nav-link' to='/fast-company/login'>\n            Login\n          </Link>\n        </li>\n        <li className='nav-item'>\n          <Link className='nav-link' to='/fast-company/users'>\n            Users\n          </Link>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default NavBar\n","import React from 'react'\nconst NotFound = () => {\n  return <h1>Page not found</h1>\n}\n\nexport default NotFound\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n  const getInputClasses = () => {\n    return 'form-control' + (error ? ' is-invalid' : '')\n  }\n  const [showPassword, setShowPassword] = useState(false)\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n\n  const toggleShowPassword = () => {\n    setShowPassword((prevstate) => !prevstate)\n  }\n  return (\n    <div className='mb-4'>\n      <label htmlFor={name}>{label}</label>\n      <div className='input-group has-validation'>\n        <input\n          className={getInputClasses()}\n          type={showPassword ? 'text' : type}\n          id={name}\n          name={name}\n          value={value}\n          onChange={handleChange}\n        />\n        {type === 'password' && (\n          <button\n            className='btn btn-outline-secondary'\n            type='button'\n            onClick={toggleShowPassword}\n          >\n            <i className={'bi bi-eye' + (showPassword ? '-fill' : '')}></i>\n          </button>\n        )}\n        {error && <div className='invalid-feedback'>{error}</div>}\n      </div>\n    </div>\n  )\n}\nTextField.defaultProps = {\n  type: 'text'\n}\nTextField.propTypes = {\n  label: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string\n}\n\nexport default TextField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst CheckboxField = ({ name, onChange, value, children, error }) => {\n  const handleChange = () => {\n    onChange({ name: name, value: !value })\n  }\n  const getInputClasses = () => {\n    return 'form-check-input' + (error ? ' is-invalid' : '')\n  }\n  return (\n    <div className='form-check mb-4'>\n      <input\n        name={name}\n        className={getInputClasses()}\n        type='checkbox'\n        checked={value}\n        id={name}\n        onChange={handleChange}\n      />\n      <label className='form-check-label is-invalid' htmlFor='flexCheckDefault'>\n        {children}\n      </label>\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  )\n}\n\nCheckboxField.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.bool,\n  error: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n}\n\nexport default CheckboxField\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../common/form/textField'\n// import { validator } from '../../utils/validator'\nimport CheckboxField from '../common/form/checkboxField'\nimport * as yup from 'yup'\nconst LoginForm = () => {\n  const [data, setData] = useState({ email: '', password: '', stayOn: false })\n  const [errors, setErrors] = useState({})\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\n  }\n\n  const validateScheme = yup.object().shape({\n    password: yup\n      .string()\n      .required('Пароль обязателен для заполнения')\n      .matches(\n        /(?=.*[A-Z])/,\n        'Пароль должен содержать как минимум одну заглавную букву'\n      )\n      .matches(/(?=.*[0-9])/, 'Пароль должен содержать как минимум одино число')\n      .matches(\n        /(?=.*[!@#$%^&*])/,\n        'Пароль должен содержать один из символов: !@#$%^&*'\n      )\n      .matches(/(?=.{8,})/, 'Пароль должен быть больше 8 символов'),\n    email: yup\n      .string()\n      .required('Электронная почта обязательна для заполнения')\n      .email('Email введен некорректно')\n  })\n\n  // const validatorConfig = {\n  //   email: {\n  //     isRequired: { message: 'Электронная почта обязательна для заполнения' },\n  //     isEmail: { message: 'Email введен некорректно' }\n  //   },\n  //   password: {\n  //     isRequired: { message: 'Пароль обязателен для заполнения' },\n  //     isCapital: {\n  //       message: 'Пароль должен содержать как минимум одну заглавную букву'\n  //     },\n  //     isContainDigits: {\n  //       message: 'Пароль должен содержать как минимум один символ'\n  //     },\n  //     min: {\n  //       message: 'Пароль должен быть больше 8 символов',\n  //       value: 8\n  //     }\n  //   }\n  // }\n  useEffect(() => {\n    validate()\n  }, [data])\n  const isValid = Object.keys(errors).length === 0\n  const validate = () => {\n    // const errors = validator(data, validatorConfig)\n    validateScheme\n      .validate(data)\n      .then(() => setErrors({}))\n      .catch((err) => setErrors({ [err.path]: err.message }))\n    // setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    console.log(data)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label='Электронная почта:'\n        name='email'\n        onChange={handleChange}\n        value={data.email}\n        error={errors.email}\n      ></TextField>\n      <TextField\n        label='Пароль:'\n        type='password'\n        name='password'\n        onChange={handleChange}\n        value={data.password}\n        error={errors.password}\n      ></TextField>\n      <CheckboxField onChange={handleChange} value={data.stayOn} name='stayOn'>\n        Оставатся в системе?\n      </CheckboxField>\n      <button\n        type='submit'\n        className='btn btn-primary w-100 mx-auto'\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default LoginForm\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n}\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n]\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll\n}\n","import { professionsObject as professions } from './professions.api'\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n}\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    email: 'johndorian@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    email: 'koks@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    email: 'bobkelso@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    email: 'rachelgreene@fastcompany.ru',\n    sex: 'female',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    email: 'sheldoncooper@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    email: 'leonardhofstedter@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    email: 'howardwolowitz@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    email: 'nikolatesla@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    email: 'monicageller@fastcompany.ru',\n    sex: 'female',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    email: 'ratatouille@fastcompany.ru',\n    sex: 'male',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    email: 'joeytribbiani@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    email: 'bradpitt@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n]\nif (!localStorage.getItem('users')) {\n  localStorage.setItem('users', JSON.stringify(users))\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')))\n    }, 2000)\n  })\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem('users'))\n    const userIndex = users.findIndex((u) => u._id === id)\n    users[userIndex] = { ...users[userIndex], ...data }\n    localStorage.setItem('users', JSON.stringify(users))\n    resolve(users[userIndex])\n  })\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem('users')).find(\n          (user) => user._id === id\n        )\n      )\n    }, 1000)\n  })\nexport default {\n  fetchAll,\n  getById,\n  update\n}\n","const qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll\n}\n","const comments = [\n  {\n    _id: '67rdca3eeb7f6fg',\n    userId: '67rdca3eeb7f6fgeed471815',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor',\n    created_at: '1633576399367'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdasd',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdaasd',\n    pageId: '67rdca3eeb7f6fgeed471817',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  }\n]\nif (!localStorage.getItem('comments')) {\n  localStorage.setItem('comments', JSON.stringify(comments))\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(comments)\n    }, 200)\n  })\n\nconst fetchCommentsForUser = (userId) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem('comments')).filter(\n          (c) => c.pageId === userId\n        )\n      )\n    }, 200)\n  })\nconst add = (data) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'))\n      const newComment = {\n        ...data,\n        created_at: Date.now(),\n        _id: Math.random().toString(36).substr(2, 9)\n      }\n      comments.push(newComment)\n      localStorage.setItem('comments', JSON.stringify(comments))\n      resolve(newComment)\n    }, 200)\n  })\n\nconst remove = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'))\n      const newComments = comments.filter((x) => x._id !== id)\n      localStorage.setItem('comments', JSON.stringify(newComments))\n      resolve(id)\n    }, 200)\n  })\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n}\n","import users from './fake.api/user.api'\nimport professions from './fake.api/professions.api'\nimport qualities from './fake.api/qualities.api'\nimport comments from './fake.api/comments.api'\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n}\nexport default API\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst SelectField = ({\n  label,\n  value,\n  onChange,\n  defaultOption,\n  options,\n  error,\n  name\n}) => {\n  const optionsArray =\n    !Array.isArray(options) && typeof options === 'object'\n      ? Object.keys(options).map((optionName) => ({\n          name: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options.map((option) => ({ name: option.name, value: option._id }))\n  const handleChange = ({ target }) => {\n    const returnValue = options.find((option) => {\n      return target.value === option._id\n    })\n    onChange({ name: name, value: returnValue })\n  }\n  const getInputClasses = () => {\n    return 'form-select' + (error ? ' is-invalid' : '')\n  }\n  return (\n    <div className='mb-4'>\n      <label htmlFor={name} className='form-label'>\n        {label}\n      </label>\n      <select\n        className={getInputClasses()}\n        name={name}\n        value={value.value}\n        id={name}\n        onChange={handleChange}\n      >\n        <option disabled value=''>\n          {defaultOption}\n        </option>\n        {options &&\n          optionsArray.map((option) => (\n            <option value={option.value} key={option.value}>\n              {option.name}\n            </option>\n          ))}\n      </select>\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  )\n}\nSelectField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  name: PropTypes.string,\n  defaultOption: PropTypes.string,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n}\nexport default SelectField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n  const handleChange = ({ target }) => {\n    onChange({ name: target.name, value: target.value })\n  }\n  return (\n    <div className='mb-4'>\n      <label className='form-label'>{label}</label>\n      <div>\n        {options.map((option) => (\n          <div\n            key={option.name + '_' + option.value}\n            className='form-check form-check-inline'\n          >\n            <input\n              className='form-check-input'\n              type='radio'\n              name={name}\n              id={option.name + '_' + option.value}\n              checked={option.value === value}\n              value={option.value}\n              onChange={handleChange}\n            />\n            <label className='form-check-label' htmlFor='inlineRadio1'>\n              {option.name}\n            </label>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\nRadioField.propTypes = {\n  label: PropTypes.string,\n  options: PropTypes.array,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\nexport default RadioField\n","import React from 'react'\nimport Select from 'react-select'\nimport PropTypes from 'prop-types'\n\nconst MultiselectField = ({ options, onChange, name, label, defaultValue }) => {\n  const d = Object.keys(defaultValue).map((element) => ({\n    label: defaultValue[element].name,\n    value: defaultValue[element]._id\n  }))\n  const handleChange = (value) => {\n    const returnArray = options.filter((option) => {\n      return value.find((el) => {\n        return el.value === option._id\n      })\n    })\n    onChange({ name: name, value: returnArray })\n  }\n  const optionsArray =\n    !Array.isArray(options) && typeof options === 'object'\n      ? Object.keys(options).map((optionName) => ({\n          label: options[optionName].name,\n          value: options[optionName]._id\n        }))\n      : options.map((option) => ({ label: option.name, value: option._id }))\n  return (\n    <div className='mb-4'>\n      <label className='form-label'>{label}</label>\n      <Select\n        isMulti\n        closeMenuOnSelect={false}\n        options={optionsArray}\n        className='basic-multi-select'\n        classNamePrefix='select'\n        onChange={handleChange}\n        name={name}\n        defaultValue={d}\n      />\n    </div>\n  )\n}\nMultiselectField.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  error: PropTypes.string,\n  name: PropTypes.string,\n  defaultValue: PropTypes.array,\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n}\nexport default MultiselectField\n","import React, { useEffect, useState } from 'react'\nimport TextField from '../common/form/textField'\nimport { validator } from '../../utils/validator'\nimport api from '../../api'\nimport SelectField from '../common/form/selectField'\nimport RadioField from '../common/form/radioField'\nimport MultiselectField from '../common/form/multiselectField'\nimport CheckboxField from '../common/form/checkboxField'\n\nconst RegisterForm = () => {\n  const [qualities, setQualities] = useState({})\n  const [data, setData] = useState({\n    email: '',\n    password: '',\n    profession: '',\n    sex: 'male',\n    qualities: [],\n    licence: false\n  })\n  const [errors, setErrors] = useState({})\n  const [professions, setProfessions] = useState()\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      const updatedProfessions = Object.keys(data).map((profession) => ({\n        name: data[profession].name,\n        _id: data[profession]._id\n      }))\n      setProfessions(updatedProfessions)\n    })\n    api.qualities.fetchAll().then((data) => {\n      const updatedQualities = Object.keys(data).map((quality) => ({\n        _id: data[quality]._id,\n        name: data[quality].name,\n        color: data[quality].color\n      }))\n      setQualities(updatedQualities)\n    })\n  }, [])\n\n  const handleChange = (target) => {\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\n  }\n  const validatorConfig = {\n    email: {\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\n      isEmail: { message: 'Email введен некорректно' }\n    },\n    password: {\n      isRequired: { message: 'Пароль обязателен для заполнения' },\n      isCapital: {\n        message: 'Пароль должен содержать как минимум одну заглавную букву'\n      },\n      isContainDigits: {\n        message: 'Пароль должен содержать как минимум один символ'\n      },\n      min: {\n        message: 'Пароль должен быть больше 8 символов',\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: { message: 'Пожалуйста, выберите профессию' }\n    },\n    licence: {\n      isRequired: {\n        message:\n          'Вы не можете использовать наш сервис без подтвержения лицензионного соглашения'\n      }\n    }\n  }\n  useEffect(() => {\n    validate()\n  }, [data])\n  const isValid = Object.keys(errors).length === 0\n  const validate = () => {\n    const errors = validator(data, validatorConfig)\n    console.log(data)\n    setErrors(errors)\n    return Object.keys(errors).length === 0\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const isValid = validate()\n    if (!isValid) {\n      return\n    }\n    console.log(data)\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          label='Электронная почта:'\n          name='email'\n          onChange={handleChange}\n          value={data.email}\n          error={errors.email}\n        ></TextField>\n        <TextField\n          label='Пароль:'\n          type='password'\n          name='password'\n          onChange={handleChange}\n          value={data.password}\n          error={errors.password}\n        ></TextField>\n        {professions && (\n          <SelectField\n            label='Профессия:'\n            onChange={handleChange}\n            value={data.profession}\n            error={errors.profession}\n            options={professions}\n            defaultOption='Choose...'\n            name='profession'\n          />\n        )}\n        <RadioField\n          label='Укажите пол:'\n          onChange={handleChange}\n          value={data.sex}\n          name='sex'\n          options={[\n            { name: 'Male', value: 'male' },\n            { name: 'Female', value: 'female' },\n            { name: 'Other', value: 'other' }\n          ]}\n        />\n        <MultiselectField\n          onChange={handleChange}\n          options={qualities}\n          defaultValue={data.qualities}\n          name='qualities'\n          label='Выберите ваши качества:'\n        />\n        <CheckboxField\n          onChange={handleChange}\n          value={data.licence}\n          name='licence'\n          error={errors.licence}\n        >\n          Подтвердить <a>лицензионное соглашение?</a>\n        </CheckboxField>\n        <button\n          type='submit'\n          className='btn btn-primary w-100 mx-auto'\n          disabled={!isValid}\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","export function validator(data, config) {\n  const errors = {}\n  function validate(validateMethod, data, config) {\n    let statusValidate\n    switch (validateMethod) {\n      case 'isRequired':\n        if (typeof data === 'boolean') {\n          statusValidate = !data\n        } else if (typeof data === 'object') {\n          break\n        } else {\n          statusValidate = data.trim() === ''\n        }\n        break\n      case 'isEmail': {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\n        statusValidate = !emailRegExp.test(data)\n        break\n      }\n      case 'isCapital': {\n        const capitalRegExp = /[A-Z]+/g\n        statusValidate = !capitalRegExp.test(data)\n        break\n      }\n      case 'isContainDigits': {\n        const digitsRegExp = /\\d+/g\n        statusValidate = !digitsRegExp.test(data)\n        break\n      }\n      case 'min': {\n        statusValidate = data.length < config.value\n        break\n      }\n      default:\n        break\n    }\n    if (statusValidate) return config.message\n  }\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      )\n\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error\n      }\n    }\n  }\n  return errors\n}\n","import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport LoginForm from '../components/ui/loginForm'\nimport RegisterForm from '../components/ui/registerForm'\nconst Login = () => {\n  const { type } = useParams()\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\n  const toggleFormType = () => {\n    setFormType((prevstate) =>\n      prevstate === 'register' ? 'login' : 'register'\n    )\n  }\n\n  return (\n    <div className='container mt-5'>\n      <div className='row'>\n        <div className='shadow p-4'>\n          {formType === 'register' ? (\n            <>\n              <h3 className='mb-4'>Register</h3>\n              <RegisterForm />\n              <p>\n                Already have account?{' '}\n                <a\n                  role='button'\n                  onClick={toggleFormType}\n                  style={{ color: 'blue' }}\n                >\n                  {' '}\n                  Sign In\n                </a>\n              </p>\n            </>\n          ) : (\n            <>\n              <h3 className='mb-4'>Login</h3>\n              <LoginForm />\n              <p>\n                {'Dont have account?'}\n                <a\n                  role='button'\n                  onClick={toggleFormType}\n                  style={{ color: 'blue' }}\n                >\n                  {' '}\n                  Sign Up\n                </a>\n              </p>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst Main = () => {\n  return <h1>Main Page</h1>\n}\n\nexport default Main\n","import React from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n  const pageCount = Math.ceil(itemsCount / pageSize)\n  if (pageCount === 1) {\n    return null\n  }\n  const pages = _.range(1, pageCount + 1)\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pages.map((page) => (\n          <li\n            className={'page-item' + (page === currentPage ? ' active' : '')}\n            key={'page_' + page}\n          >\n            <button\n              href='#'\n              className='page-link'\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </button>{' '}\n          </li>\n        ))}\n      </ul>\n    </nav>\n  )\n}\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n}\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GroupList = ({\n  items,\n  valueProperty,\n  contentProperty,\n  onItemSelect,\n  selectedItem\n}) => {\n  return (\n    <div>\n      <ul className='list-group'>\n        {typeof items === 'object'\n          ? Object.keys(items).map((item) => (\n              <li\n                style={{\n                  backgroundColor: '#f0f2f5',\n                  fontWeight: 700,\n                  boxShadow: '3px 3px 1px 1px rgba(0, 0, 0, .2)',\n                  margin: '1px'\n                }}\n                className={\n                  'list-group-item' +\n                  (items[item] === selectedItem ? ' active' : '')\n                }\n                key={items[item][valueProperty]}\n                onClick={() => onItemSelect(items[item])}\n                role='button'\n              >\n                {items[item][contentProperty]}\n              </li>\n            ))\n          : items.map((item, index) => (\n              <li\n                className={\n                  'list-group-item' + (item === selectedItem ? ' active' : '')\n                }\n                key={items[index][valueProperty]}\n                onClick={() => onItemSelect(items[index])}\n                role='button'\n              >\n                {items[index][contentProperty]}\n              </li>\n            ))}\n      </ul>\n    </div>\n  )\n}\nGroupList.defaultProps = {\n  valueProperty: '_id',\n  contentProperty: 'name'\n}\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n}\nexport default GroupList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nconst SearchStatus = ({ numberOfUsers }) => {\n  const getCase = (number) => {\n    const lastDigit = number % 10\n    if (number === 1) {\n      return `${number} человек тусанет с тобой сегодня`\n    } else if (number >= 12 && number <= 12) {\n      return `${number} человек тусанут с тобой сегодня`\n    } else if (number > 1 && lastDigit >= 2 && lastDigit <= 4) {\n      return `${number} человека тусанут с тобой сегодня`\n    } else if (number === 0) {\n      return 'Никто с тобой не тусанет :('\n    } else return `${number} человек тусанут с тобой сегодня`\n  }\n  return (\n    <div className='d-flex justify-content-center'>\n      <span\n        style={{\n          textAlign: 'center',\n          backgroundColor: '#e2e5eb',\n          fontSize: '20px',\n          borderRadius: '10px',\n          fontWeight: 700,\n          width: '80vw',\n          color: 'black',\n          boxShadow: '8px 8px 1px 1px rgba(0, 0, 0, 0.2)',\n          marginBottom: '5px'\n        }}\n      >\n        {getCase(numberOfUsers)}\n      </span>\n    </div>\n  )\n}\nSearchStatus.propTypes = {\n  numberOfUsers: PropTypes.number.isRequired,\n  color: PropTypes.string\n}\nexport default SearchStatus\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Bookmark = ({ status }) => {\n  const l1 =\n    'M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z'\n  const l2 =\n    'M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z'\n\n  return (\n    <svg\n      width='16'\n      height='16'\n      fill='currentColor'\n      className='bi bi-bookmark-fill'\n      viewBox='0 0 16 16'\n    >\n      <path d={status ? l1 : l2} />\n    </svg>\n  )\n}\nBookmark.propTypes = {\n  status: PropTypes.bool.isRequired\n}\nexport default Bookmark\n","import React from 'react'\nconst QuailitiesList = ({ qualities }) => {\n  const getQualityClass = (quality) => {\n    let qualities = 'badge p-2 m-1 bg-'\n    qualities += quality\n    return qualities\n  }\n  const renderQualities = (qualities) => {\n    return qualities.map((quality) => (\n      <span\n        key={quality._id}\n        className={getQualityClass(quality.color)}\n        badge-padding='10px'\n      >\n        {quality.name}\n      </span>\n    ))\n  }\n\n  return renderQualities(qualities)\n}\n\nexport default QuailitiesList\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderContent = (item, column) => {\n    if (columns[column].component) {\n      const component = columns[column].component\n      if (typeof component === 'function') {\n        return component(item)\n      }\n      return component\n    }\n    return _.get(item, columns[column].path)\n  }\n  return (\n    <tbody>\n      {data.map((item) => (\n        <tr key={item._id}>\n          {Object.keys(columns).map((column) => (\n            <td key={column}>{renderContent(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n}\nexport default TableBody\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst TableHeader = ({ onSort, currentSort, columns }) => {\n  const handleSort = (item) => {\n    if (currentSort.path === item) {\n      onSort({\n        ...currentSort,\n        order: currentSort.order === 'asc' ? 'desc' : 'asc'\n      })\n    } else {\n      onSort({\n        path: item,\n        order: 'asc'\n      })\n    }\n  }\n  const handleIcon = (item) => {\n    if (currentSort.path === item) {\n      if (currentSort.order === 'desc') {\n        return (\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width='16'\n            height='16'\n            fill='currentColor'\n            className='bi bi-caret-down-fill'\n            viewBox='0 0 16 16'\n          >\n            <path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z' />\n          </svg>\n        )\n      } else {\n        return (\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            width='16'\n            height='16'\n            fill='currentColor'\n            className='bi bi-caret-up-fill'\n            viewBox='0 0 16 16'\n          >\n            <path d='m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z' />\n          </svg>\n        )\n      }\n    }\n    return null\n  }\n  return (\n    <thead>\n      <tr>\n        {Object.keys(columns).map((column) => (\n          <th\n            key={column}\n            onClick={() => handleSort(columns[column].path)}\n            {...{ role: columns[column].path && 'button' }}\n            scope='col'\n          >\n            {columns[column].name}\n            {handleIcon(columns[column].path)}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  )\n}\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  currentSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n}\nexport default TableHeader\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { TableBody, TableHeader } from '.'\n\nexport const Table = ({ onSort, currentSort, columns, data, children }) => {\n  return (\n    <table\n      className='table table-hover'\n      style={{\n        width: '80vw',\n        backgroundColor: 'white',\n        borderRadius: '10px 10px 0 0',\n        boxShadow: '8px 8px 1px 1px rgba(0, 0, 0, .2)'\n      }}\n    >\n      {children || (\n        <>\n          <TableHeader {...{ onSort, currentSort, columns }} />\n          <TableBody {...{ columns, data }} />\n        </>\n      )}\n    </table>\n  )\n}\nTable.propTypes = {\n  onSort: PropTypes.func,\n  currentSort: PropTypes.object,\n  columns: PropTypes.object,\n  data: PropTypes.array,\n  children: PropTypes.array\n}\nexport default Table\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Bookmark from '../common/bookmark'\nimport QuailitiesList from './qualities/qualitiesList'\nimport { Table } from '../common/table/table'\nimport { Link } from 'react-router-dom'\nconst UsersTable = ({\n  users,\n  onSort,\n  currentSort,\n  onToggleBookmark,\n  onDelete\n}) => {\n  const columns = {\n    name: {\n      path: 'name',\n      name: 'Имя',\n      component: (user) => (\n        <Link to={`/fast-company/users/${user._id}`}>{user.name}</Link>\n      )\n    },\n    qualities: {\n      name: 'Качества',\n      component: (user) => <QuailitiesList qualities={user.qualities} />\n    },\n    professions: {\n      path: 'profession.name',\n      name: 'Профессия'\n    },\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\n    rate: { path: 'rate', name: 'Оценка', filtered: false },\n    bookmark: {\n      path: 'bookmark',\n      name: 'Избранное',\n      component: (user) => (\n        <button onClick={() => onToggleBookmark(user._id)}>\n          <Bookmark status={user.bookmark} />\n        </button>\n      )\n    },\n    delete: {\n      component: (user) => (\n        <button\n          type='button'\n          className='btn btn-danger'\n          onClick={() => onDelete(user._id)}\n        >\n          delete\n        </button>\n      )\n    }\n  }\n  return (\n    users.length !== 0 && (\n      <Table\n        onSort={onSort}\n        currentSort={currentSort}\n        columns={columns}\n        data={users}\n      />\n    )\n  )\n}\nUsersTable.propTypes = {\n  users: PropTypes.array.isRequired,\n  onSort: PropTypes.func.isRequired,\n  currentSort: PropTypes.object.isRequired,\n  onToggleBookmark: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n}\nexport default UsersTable\n","const dateConvert = (currentTime) => {\n  const d1 = new Date()\n  const d2 = new Date(Number(currentTime))\n  const minute = 60000\n  const diff = d1 - d2\n  if (diff <= minute) {\n    return '1 минуту назад'\n  } else if (diff <= minute * 5 && diff > minute) {\n    return '5 минут назад'\n  } else if (diff <= minute * 10 && diff > minute * 5) {\n    return '10 минут назад'\n  } else if (diff <= minute * 30 && diff > minute * 10) {\n    return '30 минут назад'\n  } else if (diff <= minute * 60 * 24 && diff > minute * 30) {\n    return 'hours.minutes'\n  } else if (diff <= minute * 60 * 24 * 365 && diff > minute * 60 * 24) {\n    return monthDays(d2)\n  } else return 'day.month.year'\n}\nfunction monthDays(date) {\n  const month = date.getUTCMonth()\n  const monthString = [\n    'январь',\n    'февраль',\n    'март',\n    'апрель',\n    'май',\n    'июнь',\n    'июль',\n    'август',\n    'сентябрь',\n    'октябрь',\n    'ноябрь',\n    'декабрь'\n  ]\n  const day = date.getUTCDate()\n  return monthString[month] + ', ' + day\n}\n// var dateObj = new Date();\n// var month = dateObj.getUTCMonth() + 1; //months from 1-12\n// var day = dateObj.getUTCDate();\n// var year = dateObj.getUTCFullYear();\n\n// newdate = year + \"/\" + month + \"/\" + day;\n\nexport default dateConvert\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport dateConvert from '../../../utils/dateConvert'\nimport { Link } from 'react-router-dom'\nconst Comment = ({ commentedUser, commentContent, publishingTime }) => {\n  console.log(commentedUser._id)\n  return (\n    <div className='bg-light card-body  mb-3'>\n      <div className='row'>\n        <div className='col'>\n          <div className='d-flex flex-start '>\n            <img\n              src={`https://avatars.dicebear.com/api/avataaars/${(\n                Math.random() + 1\n              )\n                .toString(36)\n                .substring(7)}.svg`}\n              className='rounded-circle shadow-1-strong me-3'\n              alt='avatar'\n              width='65'\n              height='65'\n            />\n            <div className='flex-grow-1 flex-shrink-1'>\n              <div className='mb-4'>\n                <div className='d-flex justify-content-between align-items-center'>\n                  <p className='mb-1 '>\n                    <Link to={'/fast-company/users/' + commentedUser._id}>\n                      {commentedUser.name}\n                    </Link>{' '}\n                    <span className='small'>{dateConvert(publishingTime)}</span>\n                  </p>\n                  <button className='btn btn-sm text-primary d-flex align-items-center'>\n                    <i className='bi bi-x-lg'></i>\n                  </button>\n                </div>\n                <p className='small mb-0'>{commentContent}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nComment.propTypes = {\n  commentedUser: PropTypes.object,\n  commentContent: PropTypes.string,\n  publishingTime: PropTypes.string\n}\nexport default Comment\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport api from '../../../api'\nimport Comment from './comment'\nconst Comments = ({ userId }) => {\n  const [comments, setComments] = useState()\n  const [users, setUsers] = useState()\n  useEffect(() => {\n    api.comments.fetchCommentsForUser(userId).then((data) => {\n      setComments(data)\n    })\n    api.users.fetchAll().then((data) => {\n      setUsers(data)\n    })\n  }, [])\n\n  const filterUser = (id) => {\n    return users.find((user) => user._id === id)\n  }\n  return (\n    <>\n      {comments && users ? (\n        <>\n          {comments.map((comment) => (\n            <Comment\n              key={comment._id}\n              commentedUser={filterUser(comment.userId)}\n              commentContent={comment.content}\n              publishingTime={comment.created_at}\n            />\n          ))}\n        </>\n      ) : (\n        <h3>Loading...</h3>\n      )}\n    </>\n  )\n}\n\nComments.propTypes = {\n  userId: PropTypes.string\n}\nexport default Comments\n","import UserPage from './userPage'\n\nexport default UserPage\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../../../api'\nimport PropTypes from 'prop-types'\nimport QuailitiesList from '../../ui/qualities/qualitiesList'\nimport Comments from './comments'\nconst UserPage = ({ userId, onToggleBookmark }) => {\n  const [user, setUser] = useState()\n  useEffect(() => {\n    api.users.getById(userId).then((data) => {\n      setUser(data)\n    })\n  }, [])\n  return (\n    <>\n      {user ? (\n        <>\n          <div className='container'>\n            <div className='row gutters-sm'>\n              <div className='col-md-4 mb-3'>\n                <div className='card mb-3'>\n                  <div className='card-body'>\n                    <button className='position-absolute top-0 end-0 btn btn-light btn-sm'>\n                      <Link to={'/fast-company/useredit/' + userId}>\n                        <i className='bi bi-gear'></i>\n                      </Link>\n                    </button>\n                    <div className='d-flex flex-column align-items-center text-center position-relative'>\n                      <img\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\n                          Math.random() + 1\n                        )\n                          .toString(36)\n                          .substring(7)}.svg`}\n                        className='rounded-circle shadow-1-strong me-3'\n                        alt='avatar'\n                        width='65'\n                        height='65'\n                      />\n                      <div className='mt-3'>\n                        <h4> {user.name}</h4>\n                        <p className='text-secondary mb-1'>\n                          {user.profession.name}\n                        </p>\n                        <div className='text-muted'>\n                          <i\n                            className='bi bi-caret-down-fill text-primary'\n                            role='button'\n                          ></i>\n                          <i\n                            className='bi bi-caret-up text-secondary'\n                            role='button'\n                          ></i>\n                          <span className='ms-2'>{user.rate}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='card mb-3'>\n                  <div className='card-body d-flex flex-column justify-content-center text-center'>\n                    <h5 className='card-title'>\n                      <span>Qualities</span>\n                    </h5>\n                    <p className='card-text'>\n                      <QuailitiesList qualities={user.qualities} />\n                    </p>\n                  </div>\n                </div>\n                <div className='card mb-3'>\n                  <div className='card-body d-flex flex-column justify-content-center text-center'>\n                    <h5 className='card-title'>\n                      <span>Completed meetings</span>\n                    </h5>\n\n                    <h1 className='display-1'>{user.completedMeetings}</h1>\n                  </div>\n                </div>\n              </div>\n              <div className='col-md-8'>\n                <div className='card mb-2'>\n                  <div className='card-body'>\n                    <div>\n                      <h2>New comment</h2>\n                      <div className='mb-4'>\n                        <select className='form-select' name='userId' value=''>\n                          <option disabled value='' selected>\n                            Выберите пользователя\n                          </option>\n\n                          <option>Доктор</option>\n                          <option>Тусер</option>\n                        </select>\n                      </div>\n                      <div className='mb-4'>\n                        <label\n                          htmlFor='exampleFormControlTextarea1'\n                          className='form-label'\n                        >\n                          Сообщение\n                        </label>\n                        <textarea\n                          className='form-control'\n                          id='exampleFormControlTextarea1'\n                          rows='3'\n                        ></textarea>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className='card mb-3'>\n                  <div className='card-body '>\n                    <h2>Comments</h2>\n                    <hr />\n                    <Comments userId={user._id} />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <h3>Loading...</h3>\n      )}\n    </>\n  )\n}\nUserPage.propTypes = {\n  userId: PropTypes.string.isRequired,\n  onToggleBookmark: PropTypes.func\n}\n\nexport default UserPage\n","import UsersListPage from './usersListPage'\nexport default UsersListPage\n","import React, { useState, useEffect } from 'react'\nimport Pagination from '../../common/pagination'\nimport paginate from '../../../utils/paginate'\nimport GroupList from '../../common/groupList'\nimport api from '../../../api'\nimport SearchStatus from '../../ui/searchStatus'\nimport UsersTable from '../../ui/usersTable'\nimport _ from 'lodash'\nimport { useParams } from 'react-router-dom'\nimport UserPage from '../userPage'\nimport TextField from '../../common/form/textField'\n\nconst UsersListPage = () => {\n  const { userId } = useParams()\n  const [users, setUsers] = useState()\n  const [professions, setProfessions] = useState()\n  const [currentPage, setCurrentPage] = useState(1)\n  const [selectedProf, setSelectedProf] = useState()\n  const [searchByName, setSearchByName] = useState('')\n  const [sortBy, setSortBy] = useState({\n    path: 'name',\n    order: 'asc'\n  })\n  const pageSize = 10\n\n  const handleProfessionSelect = (item) => {\n    setSelectedProf(item)\n    setSearchByName('')\n  }\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex)\n  }\n  const handleSortByProfession = (item) => {\n    setSortBy(item)\n  }\n  const handleSortByName = (target) => {\n    setSearchByName(target.value)\n    setSelectedProf('')\n  }\n\n  useEffect(() => {\n    setCurrentPage(1)\n  }, [selectedProf])\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => {\n      setProfessions(data)\n    })\n  }, [])\n\n  useEffect(() => {\n    api.users.fetchAll().then((data) => {\n      setUsers(data)\n    })\n  }, [])\n  const handleDelete = (userId) => {\n    setUsers((prevState) => prevState.filter((user) => userId !== user._id))\n  }\n  const toggleHandleBookmark = (userId) => {\n    setUsers((prevState) =>\n      prevState.map((user) => {\n        if (userId === user._id) {\n          user.bookmark = !user.bookmark\n        }\n        return user\n      })\n    )\n  }\n\n  if (userId) {\n    return <UserPage userId={userId} onToggleBookmark={toggleHandleBookmark} />\n  } else if (users && !userId) {\n    const filteredUsers =\n      selectedProf && selectedProf._id\n        ? users.filter((user) => user.profession._id === selectedProf._id)\n        : users.filter((user) =>\n            user.name.toLowerCase().includes(searchByName.toLocaleLowerCase())\n          )\n    const count = filteredUsers.length\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order])\n    const userCrop = paginate(sortedUsers, currentPage, pageSize)\n    const clearFilter = () => {\n      setSelectedProf(undefined)\n    }\n    return (\n      <div\n        className='d-flex table-sm'\n        style={{\n          paddingTop: '7vh',\n          height: '100vh',\n          backgroundPosition: 'center'\n        }}\n      >\n        {professions && (\n          <div className='d-flex flex-column flex-shrink-0 p-3'>\n            <GroupList\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n              selectedItem={selectedProf}\n            />\n            <button className='btn btn-secondary mt-2' onClick={clearFilter}>\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className='d-flex flex-column'>\n          <SearchStatus numberOfUsers={count} />\n          <form>\n            <TextField\n              label='Поиск'\n              name='search'\n              value={searchByName}\n              error=''\n              onChange={handleSortByName}\n            />\n          </form>\n          <UsersTable\n            users={userCrop}\n            onDelete={handleDelete}\n            currentSort={sortBy}\n            onSort={handleSortByProfession}\n            onToggleBookmark={toggleHandleBookmark}\n          />\n          <div className='d-flex-justify-content-center'>\n            <Pagination\n              itemsCount={count}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return 'Loading...'\n}\n\nexport default UsersListPage\n","export default function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize\n  return [...items].splice(startIndex, pageSize)\n}\n","import React from 'react'\nimport UsersListPage from '../components/page/usersListPage'\n\nconst Users = () => {\n  return (\n    <>\n      <UsersListPage />\n    </>\n  )\n}\n\nexport default Users\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport api from '../../api'\nimport TextField from '../common/form/textField'\nimport SelectField from '../common/form/selectField'\nimport MultiselectField from '../common/form/multiselectField'\nimport RadioField from '../common/form/radioField'\n\nconst UserEdit = () => {\n  const { userId } = useParams()\n  const [user, setUser] = useState()\n  const [qualities, setQualities] = useState({})\n  const [professions, setProfessions] = useState()\n  const handleChange = (target) => {\n    setUser((prevState) => ({ ...prevState, [target.name]: target.value }))\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    api.users.update(userId, user)\n  }\n  useEffect(() => {\n    api.users.getById(userId).then((data) => {\n      setUser(data)\n    })\n    api.professions.fetchAll().then((data) => {\n      const updatedProfessions = Object.keys(data).map((profession) => ({\n        name: data[profession].name,\n        _id: data[profession]._id\n      }))\n      setProfessions(updatedProfessions)\n    })\n    api.qualities.fetchAll().then((data) => {\n      const updatedQualities = Object.keys(data).map((quality) => ({\n        _id: data[quality]._id,\n        name: data[quality].name,\n        color: data[quality].color\n      }))\n      setQualities(updatedQualities)\n    })\n  }, [])\n  return (\n    <div className='container mt-5'>\n      <div className='row'>\n        <div className='shadow p-4'>\n          {user && professions && (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label='Имя:'\n                name='name'\n                onChange={handleChange}\n                value={user.name}\n              ></TextField>\n              <TextField\n                label='Электронная почта:'\n                type='email'\n                name='email'\n                onChange={handleChange}\n                value={user.email}\n              ></TextField>\n              <SelectField\n                label='Выбери свою профессию:'\n                onChange={handleChange}\n                value={user.profession}\n                options={professions}\n                defaultOption='Choose...'\n                name='profession'\n              />\n              <RadioField\n                label='Укажите пол:'\n                onChange={handleChange}\n                value={user.sex}\n                name='sex'\n                options={[\n                  { name: 'Male', value: 'male' },\n                  { name: 'Female', value: 'female' },\n                  { name: 'Other', value: 'other' }\n                ]}\n              />\n              <MultiselectField\n                onChange={handleChange}\n                options={qualities}\n                defaultValue={user.qualities}\n                name='qualities'\n                label='Выберите ваши качества:'\n              />\n              <button type='submit' className='btn btn-primary w-100 mx-auto'>\n                Submit\n              </button>\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserEdit\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport NavBar from './components/ui/navBar'\nimport NotFound from './components/page/notFound'\nimport Login from './layouts/login'\nimport Main from './layouts/main'\nimport Users from './layouts/users'\nimport UserEdit from './components/page/userEdit'\n\nconst App = () => (\n  <>\n    <NavBar />\n    <Switch>\n      <Route path='/fast-company' exact component={Main}></Route>\n      <Route path='/fast-company/login:type?' component={Login}></Route>\n      <Route\n        path='/fast-company/useredit/:userId?'\n        component={UserEdit}\n      ></Route>\n      <Route path='/fast-company/users/:userId?' component={Users}></Route>\n      <Route path='/fast-company/404' component={NotFound}></Route>\n      <Redirect to='/fast-company/404' />\n    </Switch>\n  </>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './app/App'\nimport './index.scss'\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min'\n\nReactDom.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}