{"version":3,"sources":["app/components/ui/navBar.jsx","app/components/page/notFound.jsx","app/components/common/form/textField.jsx","app/components/common/form/checkboxField.jsx","app/components/ui/loginForm.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiselectField.jsx","app/components/ui/registerForm.jsx","app/utils/validator.js","app/layouts/login.jsx","app/layouts/main.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/ui/qualities/qualitiesList.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/table.jsx","app/components/ui/usersTable.jsx","app/utils/dateConvert.js","app/components/page/userPage/comment.jsx","app/components/page/userPage/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/page/userEdit.jsx","app/App.js","index.js"],"names":["NavBar","className","to","NotFound","TextField","label","type","name","value","onChange","error","useState","showPassword","setShowPassword","htmlFor","id","target","onClick","prevstate","defaultProps","CheckboxField","children","checked","LoginForm","email","password","stayOn","data","setData","errors","setErrors","handleChange","prevState","validateScheme","yup","shape","required","matches","useEffect","validate","isValid","Object","keys","length","then","catch","err","path","message","onSubmit","event","preventDefault","console","log","disabled","professionsObject","doctor","_id","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","find","user","update","userIndex","findIndex","u","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","SelectField","defaultOption","options","optionsArray","Array","isArray","map","option","optionName","returnValue","RadioField","MultiselectField","defaultValue","d","element","isMulti","closeMenuOnSelect","classNamePrefix","returnArray","el","RegisterForm","setQualities","licence","setProfessions","api","updatedProfessions","updatedQualities","quality","validatorConfig","isRequired","isEmail","isCapital","isContainDigits","min","config","validateMethod","statusValidate","trim","test","fieldName","validator","Login","useParams","formType","setFormType","toggleFormType","role","style","Main","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","href","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","backgroundColor","fontWeight","boxShadow","margin","index","SearchStatus","numberOfUsers","textAlign","fontSize","borderRadius","width","marginBottom","number","lastDigit","getCase","Bookmark","status","height","fill","viewBox","QuailitiesList","getQualityClass","renderQualities","TableBody","columns","renderContent","column","component","get","TableHeader","onSort","currentSort","order","scope","xmlns","Table","UsersTable","onToggleBookmark","onDelete","filtered","delete","dateConvert","currentTime","d1","d2","Number","minute","diff","date","month","getUTCMonth","monthString","day","getUTCDate","monthDays","Comment","commentedUser","commentContent","publishingTime","src","substring","alt","Comments","setComments","setUsers","comment","UserPage","setUser","selected","rows","UsersListPage","setCurrentPage","selectedProf","setSelectedProf","searchByName","setSearchByName","sortBy","setSortBy","toggleHandleBookmark","filteredUsers","toLowerCase","includes","toLocaleLowerCase","count","userCrop","pageNumber","startIndex","splice","paginate","orderBy","paddingTop","backgroundPosition","undefined","pageIndex","Users","UserEdit","App","exact","ReactDom","render","forceRefresh","document","getElementById"],"mappings":"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","file":"static/js/main.8efb12cc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst NavBar = () => {\r\n  return (\r\n    <div className='bg text-white'>\r\n      <ul className='nav'>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/'>\r\n            Main\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/login'>\r\n            Login\r\n          </Link>\r\n        </li>\r\n        <li className='nav-item'>\r\n          <Link className='nav-link' to='/users'>\r\n            Users\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nconst NotFound = () => {\r\n  return <h1>Page not found</h1>\r\n}\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n  const getInputClasses = () => {\r\n    return 'form-control' + (error ? ' is-invalid' : '')\r\n  }\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n\r\n  const toggleShowPassword = () => {\r\n    setShowPassword((prevstate) => !prevstate)\r\n  }\r\n  return (\r\n    <div className='mb-4'>\r\n      <label htmlFor={name}>{label}</label>\r\n      <div className='input-group has-validation'>\r\n        <input\r\n          className={getInputClasses()}\r\n          type={showPassword ? 'text' : type}\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChange}\r\n        />\r\n        {type === 'password' && (\r\n          <button\r\n            className='btn btn-outline-secondary'\r\n            type='button'\r\n            onClick={toggleShowPassword}\r\n          >\r\n            <i className={'bi bi-eye' + (showPassword ? '-fill' : '')}></i>\r\n          </button>\r\n        )}\r\n        {error && <div className='invalid-feedback'>{error}</div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nTextField.defaultProps = {\r\n  type: 'text'\r\n}\r\nTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string\r\n}\r\n\r\nexport default TextField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CheckboxField = ({ name, onChange, value, children, error }) => {\r\n  const handleChange = () => {\r\n    onChange({ name: name, value: !value })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-check-input' + (error ? ' is-invalid' : '')\r\n  }\r\n  return (\r\n    <div className='form-check mb-4'>\r\n      <input\r\n        name={name}\r\n        className={getInputClasses()}\r\n        type='checkbox'\r\n        checked={value}\r\n        id={name}\r\n        onChange={handleChange}\r\n      />\r\n      <label className='form-check-label is-invalid' htmlFor='flexCheckDefault'>\r\n        {children}\r\n      </label>\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nCheckboxField.propTypes = {\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.bool,\r\n  error: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n}\r\n\r\nexport default CheckboxField\r\n","import React, { useEffect, useState } from 'react'\r\nimport TextField from '../common/form/textField'\r\n// import { validator } from '../../utils/validator'\r\nimport CheckboxField from '../common/form/checkboxField'\r\nimport * as yup from 'yup'\r\nconst LoginForm = () => {\r\n  const [data, setData] = useState({ email: '', password: '', stayOn: false })\r\n  const [errors, setErrors] = useState({})\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\r\n  }\r\n\r\n  const validateScheme = yup.object().shape({\r\n    password: yup\r\n      .string()\r\n      .required('Пароль обязателен для заполнения')\r\n      .matches(\r\n        /(?=.*[A-Z])/,\r\n        'Пароль должен содержать как минимум одну заглавную букву'\r\n      )\r\n      .matches(/(?=.*[0-9])/, 'Пароль должен содержать как минимум одино число')\r\n      .matches(\r\n        /(?=.*[!@#$%^&*])/,\r\n        'Пароль должен содержать один из символов: !@#$%^&*'\r\n      )\r\n      .matches(/(?=.{8,})/, 'Пароль должен быть больше 8 символов'),\r\n    email: yup\r\n      .string()\r\n      .required('Электронная почта обязательна для заполнения')\r\n      .email('Email введен некорректно')\r\n  })\r\n\r\n  // const validatorConfig = {\r\n  //   email: {\r\n  //     isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n  //     isEmail: { message: 'Email введен некорректно' }\r\n  //   },\r\n  //   password: {\r\n  //     isRequired: { message: 'Пароль обязателен для заполнения' },\r\n  //     isCapital: {\r\n  //       message: 'Пароль должен содержать как минимум одну заглавную букву'\r\n  //     },\r\n  //     isContainDigits: {\r\n  //       message: 'Пароль должен содержать как минимум один символ'\r\n  //     },\r\n  //     min: {\r\n  //       message: 'Пароль должен быть больше 8 символов',\r\n  //       value: 8\r\n  //     }\r\n  //   }\r\n  // }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n  const isValid = Object.keys(errors).length === 0\r\n  const validate = () => {\r\n    // const errors = validator(data, validatorConfig)\r\n    validateScheme\r\n      .validate(data)\r\n      .then(() => setErrors({}))\r\n      .catch((err) => setErrors({ [err.path]: err.message }))\r\n    // setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) {\r\n      return\r\n    }\r\n    console.log(data)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <TextField\r\n        label='Электронная почта:'\r\n        name='email'\r\n        onChange={handleChange}\r\n        value={data.email}\r\n        error={errors.email}\r\n      ></TextField>\r\n      <TextField\r\n        label='Пароль:'\r\n        type='password'\r\n        name='password'\r\n        onChange={handleChange}\r\n        value={data.password}\r\n        error={errors.password}\r\n      ></TextField>\r\n      <CheckboxField onChange={handleChange} value={data.stayOn} name='stayOn'>\r\n        Оставатся в системе?\r\n      </CheckboxField>\r\n      <button\r\n        type='submit'\r\n        className='btn btn-primary w-100 mx-auto'\r\n        disabled={!isValid}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","export const professionsObject = {\n  doctor: { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  waiter: { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  physics: { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  engineer: { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  actor: { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  cook: { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n}\nexport const professions = [\n  { _id: '67rdca3eeb7f6fgeed471818', name: 'Доктор' },\n  { _id: '67rdca3eeb7f6fgeed471820', name: 'Официант' },\n  { _id: '67rdca3eeb7f6fgeed471814', name: 'Физик' },\n  { _id: '67rdca3eeb7f6fgeed471822', name: 'Инженер' },\n  { _id: '67rdca3eeb7f6fgeed471824', name: 'Актер' },\n  { _id: '67rdca3eeb7f6fgeed471829', name: 'Повар' }\n]\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(professionsObject)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll\n}\n","import { professionsObject as professions } from './professions.api'\nconst qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n}\n\nconst users = [\n  {\n    _id: '67rdca3eeb7f6fgeed471815',\n    name: 'Джон Дориан',\n    email: 'johndorian@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n    completedMeetings: 36,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471816',\n    name: 'Кокс',\n    email: 'koks@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n    completedMeetings: 15,\n    rate: 2.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471817',\n    name: 'Боб Келсо',\n    email: 'bobkelso@fastcompany.ru',\n    sex: 'male',\n    profession: professions.doctor,\n    qualities: [qualities.buller],\n    completedMeetings: 247,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471818',\n    name: 'Рэйчел Грин',\n    email: 'rachelgreene@fastcompany.ru',\n    sex: 'female',\n    profession: professions.waiter,\n    qualities: [qualities.uncertain],\n    completedMeetings: 148,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471819',\n    name: 'Шелдон Купер',\n    email: 'sheldoncooper@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 37,\n    rate: 4.6,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471820',\n    name: 'Леонард Хофстедтер',\n    email: 'leonardhofstedter@fastcompany.ru',\n    sex: 'male',\n    profession: professions.physics,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 147,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471821',\n    name: 'Говард Воловиц',\n    email: 'howardwolowitz@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.strange, qualities.tedious],\n    completedMeetings: 72,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471822',\n    name: 'Никола Тесла',\n    email: 'nikolatesla@fastcompany.ru',\n    sex: 'male',\n    profession: professions.engineer,\n    qualities: [qualities.handsome],\n    completedMeetings: 72,\n    rate: 5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471823',\n    name: 'Моника Геллер',\n    email: 'monicageller@fastcompany.ru',\n    sex: 'female',\n    profession: professions.cook,\n    qualities: [qualities.strange, qualities.uncertain],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed471824',\n    name: 'Рататуй',\n    email: 'ratatouille@fastcompany.ru',\n    sex: 'male',\n    profession: professions.cook,\n    qualities: [qualities.handsome, qualities.buller],\n    completedMeetings: 17,\n    rate: 4.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181f',\n    name: 'Джоуи Триббиани',\n    email: 'joeytribbiani@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.uncertain, qualities.strange],\n    completedMeetings: 434,\n    rate: 3.5,\n    bookmark: false\n  },\n  {\n    _id: '67rdca3eeb7f6fgeed47181r',\n    name: 'Брэд Питт',\n    email: 'bradpitt@fastcompany.ru',\n    sex: 'male',\n    profession: professions.actor,\n    qualities: [qualities.handsome],\n    completedMeetings: 434,\n    rate: 5,\n    bookmark: false\n  }\n]\nif (!localStorage.getItem('users')) {\n  localStorage.setItem('users', JSON.stringify(users))\n}\n\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(JSON.parse(localStorage.getItem('users')))\n    }, 2000)\n  })\nconst update = (id, data) =>\n  new Promise((resolve) => {\n    const users = JSON.parse(localStorage.getItem('users'))\n    const userIndex = users.findIndex((u) => u._id === id)\n    users[userIndex] = { ...users[userIndex], ...data }\n    localStorage.setItem('users', JSON.stringify(users))\n    resolve(users[userIndex])\n  })\n\nconst getById = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem('users')).find(\n          (user) => user._id === id\n        )\n      )\n    }, 1000)\n  })\nexport default {\n  fetchAll,\n  getById,\n  update\n}\n","const qualities = {\n  tedious: {\n    _id: '67rdca3eeb7f6fgeed471198',\n    name: 'Нудила',\n    color: 'primary'\n  },\n  strange: {\n    _id: '67rdca3eeb7f6fgeed471100',\n    name: 'Странный',\n    color: 'secondary'\n  },\n  buller: {\n    _id: '67rdca3eeb7f6fgeed4711012',\n    name: 'Троль',\n    color: 'success'\n  },\n  alcoholic: {\n    _id: '67rdca3eeb7f6fgeed471101',\n    name: 'Алкоголик',\n    color: 'danger'\n  },\n  handsome: {\n    _id: '67rdca3eeb7f6fgeed471102',\n    name: 'Красавчик',\n    color: 'info'\n  },\n  uncertain: {\n    _id: '67rdca3eeb7f6fgeed471103',\n    name: 'Неуверенный',\n    color: 'dark'\n  }\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(qualities)\n    }, 2000)\n  })\n\nexport default {\n  fetchAll\n}\n","const comments = [\n  {\n    _id: '67rdca3eeb7f6fg',\n    userId: '67rdca3eeb7f6fgeed471815',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor',\n    created_at: '1633576399367'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdasd',\n    pageId: '67rdca3eeb7f6fgeed471815',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  },\n  {\n    _id: '67rdca3eeb7f6fgdaasd',\n    pageId: '67rdca3eeb7f6fgeed471817',\n    userId: '67rdca3eeb7f6fgeed471815',\n    content: 'Lorem ipsum dolor and etc',\n    created_at: '1633573058520'\n  }\n]\nif (!localStorage.getItem('comments')) {\n  localStorage.setItem('comments', JSON.stringify(comments))\n}\nconst fetchAll = () =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(comments)\n    }, 200)\n  })\n\nconst fetchCommentsForUser = (userId) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      resolve(\n        JSON.parse(localStorage.getItem('comments')).filter(\n          (c) => c.pageId === userId\n        )\n      )\n    }, 200)\n  })\nconst add = (data) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'))\n      const newComment = {\n        ...data,\n        created_at: Date.now(),\n        _id: Math.random().toString(36).substr(2, 9)\n      }\n      comments.push(newComment)\n      localStorage.setItem('comments', JSON.stringify(comments))\n      resolve(newComment)\n    }, 200)\n  })\n\nconst remove = (id) =>\n  new Promise((resolve) => {\n    window.setTimeout(function () {\n      const comments = JSON.parse(localStorage.getItem('comments'))\n      const newComments = comments.filter((x) => x._id !== id)\n      localStorage.setItem('comments', JSON.stringify(newComments))\n      resolve(id)\n    }, 200)\n  })\nexport default {\n  fetchAll,\n  fetchCommentsForUser,\n  add,\n  remove\n}\n","import users from './fake.api/user.api'\nimport professions from './fake.api/professions.api'\nimport qualities from './fake.api/qualities.api'\nimport comments from './fake.api/comments.api'\nconst API = {\n  users,\n  professions,\n  qualities,\n  comments\n}\nexport default API\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst SelectField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  defaultOption,\r\n  options,\r\n  error,\r\n  name\r\n}) => {\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          name: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options.map((option) => ({ name: option.name, value: option._id }))\r\n  const handleChange = ({ target }) => {\r\n    const returnValue = options.find((option) => {\r\n      return target.value === option._id\r\n    })\r\n    onChange({ name: name, value: returnValue })\r\n  }\r\n  const getInputClasses = () => {\r\n    return 'form-select' + (error ? ' is-invalid' : '')\r\n  }\r\n  return (\r\n    <div className='mb-4'>\r\n      <label htmlFor={name} className='form-label'>\r\n        {label}\r\n      </label>\r\n      <select\r\n        className={getInputClasses()}\r\n        name={name}\r\n        value={value.value}\r\n        id={name}\r\n        onChange={handleChange}\r\n      >\r\n        <option disabled value=''>\r\n          {defaultOption}\r\n        </option>\r\n        {options &&\r\n          optionsArray.map((option) => (\r\n            <option value={option.value} key={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n      {error && <div className='invalid-feedback'>{error}</div>}\r\n    </div>\r\n  )\r\n}\r\nSelectField.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultOption: PropTypes.string,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n}\r\nexport default SelectField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n  const handleChange = ({ target }) => {\r\n    onChange({ name: target.name, value: target.value })\r\n  }\r\n  return (\r\n    <div className='mb-4'>\r\n      <label className='form-label'>{label}</label>\r\n      <div>\r\n        {options.map((option) => (\r\n          <div\r\n            key={option.name + '_' + option.value}\r\n            className='form-check form-check-inline'\r\n          >\r\n            <input\r\n              className='form-check-input'\r\n              type='radio'\r\n              name={name}\r\n              id={option.name + '_' + option.value}\r\n              checked={option.value === value}\r\n              value={option.value}\r\n              onChange={handleChange}\r\n            />\r\n            <label className='form-check-label' htmlFor='inlineRadio1'>\r\n              {option.name}\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nRadioField.propTypes = {\r\n  label: PropTypes.string,\r\n  options: PropTypes.array,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.string\r\n}\r\nexport default RadioField\r\n","import React from 'react'\r\nimport Select from 'react-select'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst MultiselectField = ({ options, onChange, name, label, defaultValue }) => {\r\n  const d = Object.keys(defaultValue).map((element) => ({\r\n    label: defaultValue[element].name,\r\n    value: defaultValue[element]._id\r\n  }))\r\n  const handleChange = (value) => {\r\n    const returnArray = options.filter((option) => {\r\n      return value.find((el) => {\r\n        return el.value === option._id\r\n      })\r\n    })\r\n    onChange({ name: name, value: returnArray })\r\n  }\r\n  const optionsArray =\r\n    !Array.isArray(options) && typeof options === 'object'\r\n      ? Object.keys(options).map((optionName) => ({\r\n          label: options[optionName].name,\r\n          value: options[optionName]._id\r\n        }))\r\n      : options.map((option) => ({ label: option.name, value: option._id }))\r\n  return (\r\n    <div className='mb-4'>\r\n      <label className='form-label'>{label}</label>\r\n      <Select\r\n        isMulti\r\n        closeMenuOnSelect={false}\r\n        options={optionsArray}\r\n        className='basic-multi-select'\r\n        classNamePrefix='select'\r\n        onChange={handleChange}\r\n        name={name}\r\n        defaultValue={d}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nMultiselectField.propTypes = {\r\n  label: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultValue: PropTypes.array,\r\n  options: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\r\n}\r\nexport default MultiselectField\r\n","import React, { useEffect, useState } from 'react'\r\nimport TextField from '../common/form/textField'\r\nimport { validator } from '../../utils/validator'\r\nimport api from '../../api'\r\nimport SelectField from '../common/form/selectField'\r\nimport RadioField from '../common/form/radioField'\r\nimport MultiselectField from '../common/form/multiselectField'\r\nimport CheckboxField from '../common/form/checkboxField'\r\n\r\nconst RegisterForm = () => {\r\n  const [qualities, setQualities] = useState({})\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    profession: '',\r\n    sex: 'male',\r\n    qualities: [],\r\n    licence: false\r\n  })\r\n  const [errors, setErrors] = useState({})\r\n  const [professions, setProfessions] = useState()\r\n\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => {\r\n      const updatedProfessions = Object.keys(data).map((profession) => ({\r\n        name: data[profession].name,\r\n        _id: data[profession]._id\r\n      }))\r\n      setProfessions(updatedProfessions)\r\n    })\r\n    api.qualities.fetchAll().then((data) => {\r\n      const updatedQualities = Object.keys(data).map((quality) => ({\r\n        _id: data[quality]._id,\r\n        name: data[quality].name,\r\n        color: data[quality].color\r\n      }))\r\n      setQualities(updatedQualities)\r\n    })\r\n  }, [])\r\n\r\n  const handleChange = (target) => {\r\n    setData((prevState) => ({ ...prevState, [target.name]: target.value }))\r\n  }\r\n  const validatorConfig = {\r\n    email: {\r\n      isRequired: { message: 'Электронная почта обязательна для заполнения' },\r\n      isEmail: { message: 'Email введен некорректно' }\r\n    },\r\n    password: {\r\n      isRequired: { message: 'Пароль обязателен для заполнения' },\r\n      isCapital: {\r\n        message: 'Пароль должен содержать как минимум одну заглавную букву'\r\n      },\r\n      isContainDigits: {\r\n        message: 'Пароль должен содержать как минимум один символ'\r\n      },\r\n      min: {\r\n        message: 'Пароль должен быть больше 8 символов',\r\n        value: 8\r\n      }\r\n    },\r\n    profession: {\r\n      isRequired: { message: 'Пожалуйста, выберите профессию' }\r\n    },\r\n    licence: {\r\n      isRequired: {\r\n        message:\r\n          'Вы не можете использовать наш сервис без подтвержения лицензионного соглашения'\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    validate()\r\n  }, [data])\r\n  const isValid = Object.keys(errors).length === 0\r\n  const validate = () => {\r\n    const errors = validator(data, validatorConfig)\r\n    console.log(data)\r\n    setErrors(errors)\r\n    return Object.keys(errors).length === 0\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const isValid = validate()\r\n    if (!isValid) {\r\n      return\r\n    }\r\n    console.log(data)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label='Электронная почта:'\r\n          name='email'\r\n          onChange={handleChange}\r\n          value={data.email}\r\n          error={errors.email}\r\n        ></TextField>\r\n        <TextField\r\n          label='Пароль:'\r\n          type='password'\r\n          name='password'\r\n          onChange={handleChange}\r\n          value={data.password}\r\n          error={errors.password}\r\n        ></TextField>\r\n        {professions && (\r\n          <SelectField\r\n            label='Профессия:'\r\n            onChange={handleChange}\r\n            value={data.profession}\r\n            error={errors.profession}\r\n            options={professions}\r\n            defaultOption='Choose...'\r\n            name='profession'\r\n          />\r\n        )}\r\n        <RadioField\r\n          label='Укажите пол:'\r\n          onChange={handleChange}\r\n          value={data.sex}\r\n          name='sex'\r\n          options={[\r\n            { name: 'Male', value: 'male' },\r\n            { name: 'Female', value: 'female' },\r\n            { name: 'Other', value: 'other' }\r\n          ]}\r\n        />\r\n        <MultiselectField\r\n          onChange={handleChange}\r\n          options={qualities}\r\n          defaultValue={data.qualities}\r\n          name='qualities'\r\n          label='Выберите ваши качества:'\r\n        />\r\n        <CheckboxField\r\n          onChange={handleChange}\r\n          value={data.licence}\r\n          name='licence'\r\n          error={errors.licence}\r\n        >\r\n          Подтвердить <a>лицензионное соглашение?</a>\r\n        </CheckboxField>\r\n        <button\r\n          type='submit'\r\n          className='btn btn-primary w-100 mx-auto'\r\n          disabled={!isValid}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm\r\n","export function validator(data, config) {\r\n  const errors = {}\r\n  function validate(validateMethod, data, config) {\r\n    let statusValidate\r\n    switch (validateMethod) {\r\n      case 'isRequired':\r\n        if (typeof data === 'boolean') {\r\n          statusValidate = !data\r\n        } else if (typeof data === 'object') {\r\n          break\r\n        } else {\r\n          statusValidate = data.trim() === ''\r\n        }\r\n        break\r\n      case 'isEmail': {\r\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g\r\n        statusValidate = !emailRegExp.test(data)\r\n        break\r\n      }\r\n      case 'isCapital': {\r\n        const capitalRegExp = /[A-Z]+/g\r\n        statusValidate = !capitalRegExp.test(data)\r\n        break\r\n      }\r\n      case 'isContainDigits': {\r\n        const digitsRegExp = /\\d+/g\r\n        statusValidate = !digitsRegExp.test(data)\r\n        break\r\n      }\r\n      case 'min': {\r\n        statusValidate = data.length < config.value\r\n        break\r\n      }\r\n      default:\r\n        break\r\n    }\r\n    if (statusValidate) return config.message\r\n  }\r\n  for (const fieldName in data) {\r\n    for (const validateMethod in config[fieldName]) {\r\n      const error = validate(\r\n        validateMethod,\r\n        data[fieldName],\r\n        config[fieldName][validateMethod]\r\n      )\r\n\r\n      if (error && !errors[fieldName]) {\r\n        errors[fieldName] = error\r\n      }\r\n    }\r\n  }\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport LoginForm from '../components/ui/loginForm'\r\nimport RegisterForm from '../components/ui/registerForm'\r\nconst Login = () => {\r\n  const { type } = useParams()\r\n  const [formType, setFormType] = useState(type === 'register' ? type : 'login')\r\n  const toggleFormType = () => {\r\n    setFormType((prevstate) =>\r\n      prevstate === 'register' ? 'login' : 'register'\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <div className='row'>\r\n        <div className='shadow p-4'>\r\n          {formType === 'register' ? (\r\n            <>\r\n              <h3 className='mb-4'>Register</h3>\r\n              <RegisterForm />\r\n              <p>\r\n                Already have account?{' '}\r\n                <a\r\n                  role='button'\r\n                  onClick={toggleFormType}\r\n                  style={{ color: 'blue' }}\r\n                >\r\n                  {' '}\r\n                  Sign In\r\n                </a>\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <h3 className='mb-4'>Login</h3>\r\n              <LoginForm />\r\n              <p>\r\n                {'Dont have account?'}\r\n                <a\r\n                  role='button'\r\n                  onClick={toggleFormType}\r\n                  style={{ color: 'blue' }}\r\n                >\r\n                  {' '}\r\n                  Sign Up\r\n                </a>\r\n              </p>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Main = () => {\r\n  return <h1>Main Page</h1>\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport _ from 'lodash'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize)\r\n  if (pageCount === 1) {\r\n    return null\r\n  }\r\n  const pages = _.range(1, pageCount + 1)\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pages.map((page) => (\r\n          <li\r\n            className={'page-item' + (page === currentPage ? ' active' : '')}\r\n            key={'page_' + page}\r\n          >\r\n            <button\r\n              href='#'\r\n              className='page-link'\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </button>{' '}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired\r\n}\r\nexport default Pagination\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GroupList = ({\r\n  items,\r\n  valueProperty,\r\n  contentProperty,\r\n  onItemSelect,\r\n  selectedItem\r\n}) => {\r\n  return (\r\n    <div>\r\n      <ul className='list-group'>\r\n        {typeof items === 'object'\r\n          ? Object.keys(items).map((item) => (\r\n              <li\r\n                style={{\r\n                  backgroundColor: '#f0f2f5',\r\n                  fontWeight: 700,\r\n                  boxShadow: '3px 3px 1px 1px rgba(0, 0, 0, .2)',\r\n                  margin: '1px'\r\n                }}\r\n                className={\r\n                  'list-group-item' +\r\n                  (items[item] === selectedItem ? ' active' : '')\r\n                }\r\n                key={items[item][valueProperty]}\r\n                onClick={() => onItemSelect(items[item])}\r\n                role='button'\r\n              >\r\n                {items[item][contentProperty]}\r\n              </li>\r\n            ))\r\n          : items.map((item, index) => (\r\n              <li\r\n                className={\r\n                  'list-group-item' + (item === selectedItem ? ' active' : '')\r\n                }\r\n                key={items[index][valueProperty]}\r\n                onClick={() => onItemSelect(items[index])}\r\n                role='button'\r\n              >\r\n                {items[index][contentProperty]}\r\n              </li>\r\n            ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nGroupList.defaultProps = {\r\n  valueProperty: '_id',\r\n  contentProperty: 'name'\r\n}\r\nGroupList.propTypes = {\r\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  valueProperty: PropTypes.string.isRequired,\r\n  contentProperty: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func,\r\n  selectedItem: PropTypes.object\r\n}\r\nexport default GroupList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst SearchStatus = ({ numberOfUsers }) => {\r\n  const getCase = (number) => {\r\n    const lastDigit = number % 10\r\n    if (number === 1) {\r\n      return `${number} человек тусанет с тобой сегодня`\r\n    } else if (number >= 12 && number <= 12) {\r\n      return `${number} человек тусанут с тобой сегодня`\r\n    } else if (number > 1 && lastDigit >= 2 && lastDigit <= 4) {\r\n      return `${number} человека тусанут с тобой сегодня`\r\n    } else if (number === 0) {\r\n      return 'Никто с тобой не тусанет :('\r\n    } else return `${number} человек тусанут с тобой сегодня`\r\n  }\r\n  return (\r\n    <div className='d-flex justify-content-center'>\r\n      <span\r\n        style={{\r\n          textAlign: 'center',\r\n          backgroundColor: '#e2e5eb',\r\n          fontSize: '20px',\r\n          borderRadius: '10px',\r\n          fontWeight: 700,\r\n          width: '80vw',\r\n          color: 'black',\r\n          boxShadow: '8px 8px 1px 1px rgba(0, 0, 0, 0.2)',\r\n          marginBottom: '5px'\r\n        }}\r\n      >\r\n        {getCase(numberOfUsers)}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\nSearchStatus.propTypes = {\r\n  numberOfUsers: PropTypes.number.isRequired,\r\n  color: PropTypes.string\r\n}\r\nexport default SearchStatus\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Bookmark = ({ status }) => {\r\n  const l1 =\r\n    'M2 2v13.5a.5.5 0 0 0 .74.439L8 13.069l5.26 2.87A.5.5 0 0 0 14 15.5V2a2 2 0 0 0-2-2H4a2 2 0 0 0-2 2z'\r\n  const l2 =\r\n    'M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z'\r\n\r\n  return (\r\n    <svg\r\n      width='16'\r\n      height='16'\r\n      fill='currentColor'\r\n      className='bi bi-bookmark-fill'\r\n      viewBox='0 0 16 16'\r\n    >\r\n      <path d={status ? l1 : l2} />\r\n    </svg>\r\n  )\r\n}\r\nBookmark.propTypes = {\r\n  status: PropTypes.bool.isRequired\r\n}\r\nexport default Bookmark\r\n","import React from 'react'\r\nconst QuailitiesList = ({ qualities }) => {\r\n  const getQualityClass = (quality) => {\r\n    let qualities = 'badge p-2 m-1 bg-'\r\n    qualities += quality\r\n    return qualities\r\n  }\r\n  const renderQualities = (qualities) => {\r\n    return qualities.map((quality) => (\r\n      <span\r\n        key={quality._id}\r\n        className={getQualityClass(quality.color)}\r\n        badge-padding='10px'\r\n      >\r\n        {quality.name}\r\n      </span>\r\n    ))\r\n  }\r\n\r\n  return renderQualities(qualities)\r\n}\r\n\r\nexport default QuailitiesList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n  const renderContent = (item, column) => {\r\n    if (columns[column].component) {\r\n      const component = columns[column].component\r\n      if (typeof component === 'function') {\r\n        return component(item)\r\n      }\r\n      return component\r\n    }\r\n    return _.get(item, columns[column].path)\r\n  }\r\n  return (\r\n    <tbody>\r\n      {data.map((item) => (\r\n        <tr key={item._id}>\r\n          {Object.keys(columns).map((column) => (\r\n            <td key={column}>{renderContent(item, column)}</td>\r\n          ))}\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  )\r\n}\r\nTableBody.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n}\r\nexport default TableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TableHeader = ({ onSort, currentSort, columns }) => {\r\n  const handleSort = (item) => {\r\n    if (currentSort.path === item) {\r\n      onSort({\r\n        ...currentSort,\r\n        order: currentSort.order === 'asc' ? 'desc' : 'asc'\r\n      })\r\n    } else {\r\n      onSort({\r\n        path: item,\r\n        order: 'asc'\r\n      })\r\n    }\r\n  }\r\n  const handleIcon = (item) => {\r\n    if (currentSort.path === item) {\r\n      if (currentSort.order === 'desc') {\r\n        return (\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            width='16'\r\n            height='16'\r\n            fill='currentColor'\r\n            className='bi bi-caret-down-fill'\r\n            viewBox='0 0 16 16'\r\n          >\r\n            <path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z' />\r\n          </svg>\r\n        )\r\n      } else {\r\n        return (\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            width='16'\r\n            height='16'\r\n            fill='currentColor'\r\n            className='bi bi-caret-up-fill'\r\n            viewBox='0 0 16 16'\r\n          >\r\n            <path d='m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z' />\r\n          </svg>\r\n        )\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(columns).map((column) => (\r\n          <th\r\n            key={column}\r\n            onClick={() => handleSort(columns[column].path)}\r\n            {...{ role: columns[column].path && 'button' }}\r\n            scope='col'\r\n          >\r\n            {columns[column].name}\r\n            {handleIcon(columns[column].path)}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    </thead>\r\n  )\r\n}\r\nTableHeader.propTypes = {\r\n  onSort: PropTypes.func.isRequired,\r\n  currentSort: PropTypes.object.isRequired,\r\n  columns: PropTypes.object.isRequired\r\n}\r\nexport default TableHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TableBody, TableHeader } from '.'\r\n\r\nexport const Table = ({ onSort, currentSort, columns, data, children }) => {\r\n  return (\r\n    <table\r\n      className='table table-hover'\r\n      style={{\r\n        width: '80vw',\r\n        backgroundColor: 'white',\r\n        borderRadius: '10px 10px 0 0',\r\n        boxShadow: '8px 8px 1px 1px rgba(0, 0, 0, .2)'\r\n      }}\r\n    >\r\n      {children || (\r\n        <>\r\n          <TableHeader {...{ onSort, currentSort, columns }} />\r\n          <TableBody {...{ columns, data }} />\r\n        </>\r\n      )}\r\n    </table>\r\n  )\r\n}\r\nTable.propTypes = {\r\n  onSort: PropTypes.func,\r\n  currentSort: PropTypes.object,\r\n  columns: PropTypes.object,\r\n  data: PropTypes.array,\r\n  children: PropTypes.array\r\n}\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Bookmark from '../common/bookmark'\r\nimport QuailitiesList from './qualities/qualitiesList'\r\nimport { Table } from '../common/table/table'\r\nimport { Link } from 'react-router-dom'\r\nconst UsersTable = ({\r\n  users,\r\n  onSort,\r\n  currentSort,\r\n  onToggleBookmark,\r\n  onDelete\r\n}) => {\r\n  const columns = {\r\n    name: {\r\n      path: 'name',\r\n      name: 'Имя',\r\n      component: (user) => <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n    },\r\n    qualities: {\r\n      name: 'Качества',\r\n      component: (user) => <QuailitiesList qualities={user.qualities} />\r\n    },\r\n    professions: {\r\n      path: 'profession.name',\r\n      name: 'Профессия'\r\n    },\r\n    completedMeetings: { path: 'completedMeetings', name: 'Встретился, раз' },\r\n    rate: { path: 'rate', name: 'Оценка', filtered: false },\r\n    bookmark: {\r\n      path: 'bookmark',\r\n      name: 'Избранное',\r\n      component: (user) => (\r\n        <button onClick={() => onToggleBookmark(user._id)}>\r\n          <Bookmark status={user.bookmark} />\r\n        </button>\r\n      )\r\n    },\r\n    delete: {\r\n      component: (user) => (\r\n        <button\r\n          type='button'\r\n          className='btn btn-danger'\r\n          onClick={() => onDelete(user._id)}\r\n        >\r\n          delete\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    users.length !== 0 && (\r\n      <Table\r\n        onSort={onSort}\r\n        currentSort={currentSort}\r\n        columns={columns}\r\n        data={users}\r\n      />\r\n    )\r\n  )\r\n}\r\nUsersTable.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onSort: PropTypes.func.isRequired,\r\n  currentSort: PropTypes.object.isRequired,\r\n  onToggleBookmark: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired\r\n}\r\nexport default UsersTable\r\n","const dateConvert = (currentTime) => {\r\n  const d1 = new Date()\r\n  const d2 = new Date(Number(currentTime))\r\n  const minute = 60000\r\n  const diff = d1 - d2\r\n  if (diff <= minute) {\r\n    return '1 минуту назад'\r\n  } else if (diff <= minute * 5 && diff > minute) {\r\n    return '5 минут назад'\r\n  } else if (diff <= minute * 10 && diff > minute * 5) {\r\n    return '10 минут назад'\r\n  } else if (diff <= minute * 30 && diff > minute * 10) {\r\n    return '30 минут назад'\r\n  } else if (diff <= minute * 60 * 24 && diff > minute * 30) {\r\n    return 'hours.minutes'\r\n  } else if (diff <= minute * 60 * 24 * 365 && diff > minute * 60 * 24) {\r\n    return monthDays(d2)\r\n  } else return 'day.month.year'\r\n}\r\nfunction monthDays(date) {\r\n  const month = date.getUTCMonth()\r\n  const monthString = [\r\n    'январь',\r\n    'февраль',\r\n    'март',\r\n    'апрель',\r\n    'май',\r\n    'июнь',\r\n    'июль',\r\n    'август',\r\n    'сентябрь',\r\n    'октябрь',\r\n    'ноябрь',\r\n    'декабрь'\r\n  ]\r\n  const day = date.getUTCDate()\r\n  return monthString[month] + ', ' + day\r\n}\r\n// var dateObj = new Date();\r\n// var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n// var day = dateObj.getUTCDate();\r\n// var year = dateObj.getUTCFullYear();\r\n\r\n// newdate = year + \"/\" + month + \"/\" + day;\r\n\r\nexport default dateConvert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport dateConvert from '../../../utils/dateConvert'\r\nimport { Link } from 'react-router-dom'\r\nconst Comment = ({ commentedUser, commentContent, publishingTime }) => {\r\n  console.log(commentedUser._id)\r\n  return (\r\n    <div className='bg-light card-body  mb-3'>\r\n      <div className='row'>\r\n        <div className='col'>\r\n          <div className='d-flex flex-start '>\r\n            <img\r\n              src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                Math.random() + 1\r\n              )\r\n                .toString(36)\r\n                .substring(7)}.svg`}\r\n              className='rounded-circle shadow-1-strong me-3'\r\n              alt='avatar'\r\n              width='65'\r\n              height='65'\r\n            />\r\n            <div className='flex-grow-1 flex-shrink-1'>\r\n              <div className='mb-4'>\r\n                <div className='d-flex justify-content-between align-items-center'>\r\n                  <p className='mb-1 '>\r\n                    <Link to={'/users/' + commentedUser._id}>\r\n                      {commentedUser.name}\r\n                    </Link>{' '}\r\n                    <span className='small'>{dateConvert(publishingTime)}</span>\r\n                  </p>\r\n                  <button className='btn btn-sm text-primary d-flex align-items-center'>\r\n                    <i className='bi bi-x-lg'></i>\r\n                  </button>\r\n                </div>\r\n                <p className='small mb-0'>{commentContent}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nComment.propTypes = {\r\n  commentedUser: PropTypes.object,\r\n  commentContent: PropTypes.string,\r\n  publishingTime: PropTypes.string\r\n}\r\nexport default Comment\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport api from '../../../api'\r\nimport Comment from './comment'\r\nconst Comments = ({ userId }) => {\r\n  const [comments, setComments] = useState()\r\n  const [users, setUsers] = useState()\r\n  useEffect(() => {\r\n    api.comments.fetchCommentsForUser(userId).then((data) => {\r\n      setComments(data)\r\n    })\r\n    api.users.fetchAll().then((data) => {\r\n      setUsers(data)\r\n    })\r\n  }, [])\r\n\r\n  const filterUser = (id) => {\r\n    return users.find((user) => user._id === id)\r\n  }\r\n  return (\r\n    <>\r\n      {comments && users ? (\r\n        <>\r\n          {comments.map((comment) => (\r\n            <Comment\r\n              key={comment._id}\r\n              commentedUser={filterUser(comment.userId)}\r\n              commentContent={comment.content}\r\n              publishingTime={comment.created_at}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <h3>Loading...</h3>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nComments.propTypes = {\r\n  userId: PropTypes.string\r\n}\r\nexport default Comments\r\n","import UserPage from './userPage'\r\n\r\nexport default UserPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport api from '../../../api'\r\nimport PropTypes from 'prop-types'\r\nimport QuailitiesList from '../../ui/qualities/qualitiesList'\r\nimport Comments from './comments'\r\nconst UserPage = ({ userId, onToggleBookmark }) => {\r\n  const [user, setUser] = useState()\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((data) => {\r\n      setUser(data)\r\n    })\r\n  }, [])\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <div className='container'>\r\n            <div className='row gutters-sm'>\r\n              <div className='col-md-4 mb-3'>\r\n                <div className='card mb-3'>\r\n                  <div className='card-body'>\r\n                    <button className='position-absolute top-0 end-0 btn btn-light btn-sm'>\r\n                      <Link to={'/useredit/' + userId}>\r\n                        <i className='bi bi-gear'></i>\r\n                      </Link>\r\n                    </button>\r\n                    <div className='d-flex flex-column align-items-center text-center position-relative'>\r\n                      <img\r\n                        src={`https://avatars.dicebear.com/api/avataaars/${(\r\n                          Math.random() + 1\r\n                        )\r\n                          .toString(36)\r\n                          .substring(7)}.svg`}\r\n                        className='rounded-circle shadow-1-strong me-3'\r\n                        alt='avatar'\r\n                        width='65'\r\n                        height='65'\r\n                      />\r\n                      <div className='mt-3'>\r\n                        <h4> {user.name}</h4>\r\n                        <p className='text-secondary mb-1'>\r\n                          {user.profession.name}\r\n                        </p>\r\n                        <div className='text-muted'>\r\n                          <i\r\n                            className='bi bi-caret-down-fill text-primary'\r\n                            role='button'\r\n                          ></i>\r\n                          <i\r\n                            className='bi bi-caret-up text-secondary'\r\n                            role='button'\r\n                          ></i>\r\n                          <span className='ms-2'>{user.rate}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card mb-3'>\r\n                  <div className='card-body d-flex flex-column justify-content-center text-center'>\r\n                    <h5 className='card-title'>\r\n                      <span>Qualities</span>\r\n                    </h5>\r\n                    <p className='card-text'>\r\n                      <QuailitiesList qualities={user.qualities} />\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className='card mb-3'>\r\n                  <div className='card-body d-flex flex-column justify-content-center text-center'>\r\n                    <h5 className='card-title'>\r\n                      <span>Completed meetings</span>\r\n                    </h5>\r\n\r\n                    <h1 className='display-1'>{user.completedMeetings}</h1>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='col-md-8'>\r\n                <div className='card mb-2'>\r\n                  <div className='card-body'>\r\n                    <div>\r\n                      <h2>New comment</h2>\r\n                      <div className='mb-4'>\r\n                        <select className='form-select' name='userId' value=''>\r\n                          <option disabled value='' selected>\r\n                            Выберите пользователя\r\n                          </option>\r\n\r\n                          <option>Доктор</option>\r\n                          <option>Тусер</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className='mb-4'>\r\n                        <label\r\n                          htmlFor='exampleFormControlTextarea1'\r\n                          className='form-label'\r\n                        >\r\n                          Сообщение\r\n                        </label>\r\n                        <textarea\r\n                          className='form-control'\r\n                          id='exampleFormControlTextarea1'\r\n                          rows='3'\r\n                        ></textarea>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='card mb-3'>\r\n                  <div className='card-body '>\r\n                    <h2>Comments</h2>\r\n                    <hr />\r\n                    <Comments userId={user._id} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <h3>Loading...</h3>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nUserPage.propTypes = {\r\n  userId: PropTypes.string.isRequired,\r\n  onToggleBookmark: PropTypes.func\r\n}\r\n\r\nexport default UserPage\r\n","import UsersListPage from './usersListPage'\r\nexport default UsersListPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport Pagination from '../../common/pagination'\r\nimport paginate from '../../../utils/paginate'\r\nimport GroupList from '../../common/groupList'\r\nimport api from '../../../api'\r\nimport SearchStatus from '../../ui/searchStatus'\r\nimport UsersTable from '../../ui/usersTable'\r\nimport _ from 'lodash'\r\nimport { useParams } from 'react-router-dom'\r\nimport UserPage from '../userPage'\r\nimport TextField from '../../common/form/textField'\r\n\r\nconst UsersListPage = () => {\r\n  const { userId } = useParams()\r\n  const [users, setUsers] = useState()\r\n  const [professions, setProfessions] = useState()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [selectedProf, setSelectedProf] = useState()\r\n  const [searchByName, setSearchByName] = useState('')\r\n  const [sortBy, setSortBy] = useState({\r\n    path: 'name',\r\n    order: 'asc'\r\n  })\r\n  const pageSize = 10\r\n\r\n  const handleProfessionSelect = (item) => {\r\n    setSelectedProf(item)\r\n    setSearchByName('')\r\n  }\r\n  const handlePageChange = (pageIndex) => {\r\n    setCurrentPage(pageIndex)\r\n  }\r\n  const handleSortByProfession = (item) => {\r\n    setSortBy(item)\r\n  }\r\n  const handleSortByName = (target) => {\r\n    setSearchByName(target.value)\r\n    setSelectedProf('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(1)\r\n  }, [selectedProf])\r\n  useEffect(() => {\r\n    api.professions.fetchAll().then((data) => {\r\n      setProfessions(data)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    api.users.fetchAll().then((data) => {\r\n      setUsers(data)\r\n    })\r\n  }, [])\r\n  const handleDelete = (userId) => {\r\n    setUsers((prevState) => prevState.filter((user) => userId !== user._id))\r\n  }\r\n  const toggleHandleBookmark = (userId) => {\r\n    setUsers((prevState) =>\r\n      prevState.map((user) => {\r\n        if (userId === user._id) {\r\n          user.bookmark = !user.bookmark\r\n        }\r\n        return user\r\n      })\r\n    )\r\n  }\r\n\r\n  if (userId) {\r\n    return <UserPage userId={userId} onToggleBookmark={toggleHandleBookmark} />\r\n  } else if (users && !userId) {\r\n    const filteredUsers =\r\n      selectedProf && selectedProf._id\r\n        ? users.filter((user) => user.profession._id === selectedProf._id)\r\n        : users.filter((user) =>\r\n            user.name.toLowerCase().includes(searchByName.toLocaleLowerCase())\r\n          )\r\n    const count = filteredUsers.length\r\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order])\r\n    const userCrop = paginate(sortedUsers, currentPage, pageSize)\r\n    const clearFilter = () => {\r\n      setSelectedProf(undefined)\r\n    }\r\n    return (\r\n      <div\r\n        className='d-flex table-sm'\r\n        style={{\r\n          paddingTop: '7vh',\r\n          height: '100vh',\r\n          backgroundPosition: 'center'\r\n        }}\r\n      >\r\n        {professions && (\r\n          <div className='d-flex flex-column flex-shrink-0 p-3'>\r\n            <GroupList\r\n              items={professions}\r\n              onItemSelect={handleProfessionSelect}\r\n              selectedItem={selectedProf}\r\n            />\r\n            <button className='btn btn-secondary mt-2' onClick={clearFilter}>\r\n              Очистить\r\n            </button>\r\n          </div>\r\n        )}\r\n        <div className='d-flex flex-column'>\r\n          <SearchStatus numberOfUsers={count} />\r\n          <form>\r\n            <TextField\r\n              label='Поиск'\r\n              name='search'\r\n              value={searchByName}\r\n              error=''\r\n              onChange={handleSortByName}\r\n            />\r\n          </form>\r\n          <UsersTable\r\n            users={userCrop}\r\n            onDelete={handleDelete}\r\n            currentSort={sortBy}\r\n            onSort={handleSortByProfession}\r\n            onToggleBookmark={toggleHandleBookmark}\r\n          />\r\n          <div className='d-flex-justify-content-center'>\r\n            <Pagination\r\n              itemsCount={count}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  return 'Loading...'\r\n}\r\n\r\nexport default UsersListPage\r\n","export default function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize\r\n  return [...items].splice(startIndex, pageSize)\r\n}\r\n","import React from 'react'\r\nimport UsersListPage from '../components/page/usersListPage'\r\n\r\nconst Users = () => {\r\n  return (\r\n    <>\r\n      <UsersListPage />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport api from '../../api'\r\nimport TextField from '../common/form/textField'\r\nimport SelectField from '../common/form/selectField'\r\nimport MultiselectField from '../common/form/multiselectField'\r\nimport RadioField from '../common/form/radioField'\r\n\r\nconst UserEdit = () => {\r\n  const { userId } = useParams()\r\n  const [user, setUser] = useState()\r\n  const [qualities, setQualities] = useState({})\r\n  const [professions, setProfessions] = useState()\r\n  const handleChange = (target) => {\r\n    setUser((prevState) => ({ ...prevState, [target.name]: target.value }))\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    api.users.update(userId, user)\r\n  }\r\n  useEffect(() => {\r\n    api.users.getById(userId).then((data) => {\r\n      setUser(data)\r\n    })\r\n    api.professions.fetchAll().then((data) => {\r\n      const updatedProfessions = Object.keys(data).map((profession) => ({\r\n        name: data[profession].name,\r\n        _id: data[profession]._id\r\n      }))\r\n      setProfessions(updatedProfessions)\r\n    })\r\n    api.qualities.fetchAll().then((data) => {\r\n      const updatedQualities = Object.keys(data).map((quality) => ({\r\n        _id: data[quality]._id,\r\n        name: data[quality].name,\r\n        color: data[quality].color\r\n      }))\r\n      setQualities(updatedQualities)\r\n    })\r\n  }, [])\r\n  return (\r\n    <div className='container mt-5'>\r\n      <div className='row'>\r\n        <div className='shadow p-4'>\r\n          {user && professions && (\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label='Имя:'\r\n                name='name'\r\n                onChange={handleChange}\r\n                value={user.name}\r\n              ></TextField>\r\n              <TextField\r\n                label='Электронная почта:'\r\n                type='email'\r\n                name='email'\r\n                onChange={handleChange}\r\n                value={user.email}\r\n              ></TextField>\r\n              <SelectField\r\n                label='Выбери свою профессию:'\r\n                onChange={handleChange}\r\n                value={user.profession}\r\n                options={professions}\r\n                defaultOption='Choose...'\r\n                name='profession'\r\n              />\r\n              <RadioField\r\n                label='Укажите пол:'\r\n                onChange={handleChange}\r\n                value={user.sex}\r\n                name='sex'\r\n                options={[\r\n                  { name: 'Male', value: 'male' },\r\n                  { name: 'Female', value: 'female' },\r\n                  { name: 'Other', value: 'other' }\r\n                ]}\r\n              />\r\n              <MultiselectField\r\n                onChange={handleChange}\r\n                options={qualities}\r\n                defaultValue={user.qualities}\r\n                name='qualities'\r\n                label='Выберите ваши качества:'\r\n              />\r\n              <button type='submit' className='btn btn-primary w-100 mx-auto'>\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEdit\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport NavBar from './components/ui/navBar'\r\nimport NotFound from './components/page/notFound'\r\nimport Login from './layouts/login'\r\nimport Main from './layouts/main'\r\nimport Users from './layouts/users'\r\nimport UserEdit from './components/page/userEdit'\r\n\r\nconst App = () => (\r\n  <>\r\n    <NavBar />\r\n    <Switch>\r\n      <Route path='/' exact component={Main}></Route>\r\n      <Route path='/fast-company' component={Main}></Route>\r\n      <Route path='/login:type?' component={Login}></Route>\r\n      <Route path='/useredit/:userId?' component={UserEdit}></Route>\r\n      <Route path='/users/:userId?' component={Users}></Route>\r\n      <Route path='/404' component={NotFound}></Route>\r\n      <Redirect to='/404' />\r\n    </Switch>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './app/App'\r\nimport './index.scss'\r\nimport { BrowserRouter } from 'react-router-dom/cjs/react-router-dom.min'\r\n\r\nReactDom.render(\r\n  <BrowserRouter forceRefresh={true}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}